{"version":3,"file":"static/js/973.8432172e.chunk.js","mappings":"2OAEA,MAkBA,EAlB0BA,CAACC,EAAcC,KACvC,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAASJ,IAC9BK,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CAAC,GAQtC,MAAO,CACLF,SACAC,YACAE,SACAE,eAVqBA,KACrB,MAAMC,EAAYP,EAAWC,GAE7B,OADAI,EAAUE,GAC+B,IAAlCC,OAAOC,KAAKF,GAAWG,S,0JCRlC,SAAgB,MAAQ,qBAAqB,YAAc,2BAA2B,UAAY,0B,aCKnF,SAASC,EAAKC,GAczB,IAd0B,KAC5BC,EAAI,YACJC,EAAW,SACXC,EAAQ,QACRC,EAAU,GAAE,UACZC,EAAS,KACTC,EAAI,aACJC,EAAY,MACZC,EAAK,MACLC,EAAK,YACLC,EAAW,aACXC,EAAY,WACZC,EAAU,YACVC,GACDb,EACC,OACEc,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEP,MAAOA,GAAS,QAAUH,UAAWW,EAAOC,eAAeC,UACvEJ,EAAAA,EAAAA,KAAA,SACEK,QAASN,EACTF,aAAcA,GAAgB,MAC9BI,MAAO,CAAEL,YAAaA,GAAe,OACrCU,SAAUb,EACVD,KAAMA,GAAQ,GACdD,WAAWgB,EAAAA,EAAAA,GACTL,EAAOM,MACPjB,EACY,WAAZD,EAAuBY,EAAOO,YAAcP,EAAOM,OAErDrB,KAAMA,GAAQ,OACdC,YAAaA,GAAe,GAC5BC,SAAUA,IAAY,EACtBM,MAAOA,GAAS,GAChBe,OAAQZ,KAIhB,C,gDCxCA,MAkBA,EAlBuB,WAAwB,IAAvBzB,EAAYsC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtC,MAAOE,EAASC,IAAcrC,EAAAA,EAAAA,UAC5BK,OAAOC,KAAKV,GAAc0C,OAAO,CAACC,EAAKC,KACrCD,EAAIC,IAAO,EACJD,GACN,CAAC,IAON,MAAO,CACLH,UACAf,WANkBoB,GAAU,KAC5BJ,EAAYK,IAAI,IAAWA,EAAM,CAACD,IAAQ,MAO9C,C,wMClBA,MAkBA,EAlB0B3C,IACtB,MAAMM,EAAY,CAAC,EAcnB,OAbKN,EAAO6C,WACRvC,EAAUuC,SAAW,wBAErB7C,EAAO8C,SAASrC,OAAS,IACzBH,EAAUwC,SAAW,2CAEpB9C,EAAO+C,QACRzC,EAAUyC,MAAQ,qBAEjB/C,EAAO8C,WACRxC,EAAUwC,SAAW,wBAGlBxC,G,cCbX,MAsBA,EAtB6BwC,IAC3B,MAAOE,EAAUC,IAAe/C,EAAAA,EAAAA,UAAS,GAkBzC,OAhBAgD,EAAAA,EAAAA,WAAU,KAaRD,EAZmCH,KACjC,IAAIE,EAAW,EAQf,OANIF,EAASrC,OAAS,IAAGuC,GAAY,GACjCF,EAASrC,OAAS,KAAIuC,GAAY,GAClC,QAAQG,KAAKL,KAAWE,GAAY,GACpC,QAAQG,KAAKL,KAAWE,GAAY,GACpC,eAAeG,KAAKL,KAAWE,GAAY,GAExCA,GAGGI,CAA0BN,KACrC,CAACA,IAEGE,GCpBT,EAAuB,2BAAvB,EAAkE,oCAAlE,EAAqH,mCAArH,EAAgK,4BAAhK,EAAmM,2BAAnM,EAAuO,6BAAvO,EAAqR,qCAArR,EAAyU,mCAAzU,EAAyX,iCAAzX,EAAoa,8BAApa,EAA8e,4BAA9e,EAA6hB,uCAA7hB,EAA0lB,0CAA1lB,EAAgqB,gDAAhqB,EAAkuB,sCAAluB,EAA+wB,2BAA/wB,EAA6zB,uCAA7zB,EAAq3B,qC,aCwVr3B,QA/TA,WACE,MAAM,OAAEhD,EAAM,UAAEC,EAAS,eAAEI,IAAmBR,EAAAA,EAAAA,GAC5C,CACEgD,SAAU,GACVE,MAAO,GACPD,SAAU,GACVO,gBAAiB,IAEnBC,IAGI,QAAEhB,EAAO,WAAEf,IAAegC,EAAAA,EAAAA,KAC1BC,EAAmBC,EAAoBzD,EAAO8C,WAE7CY,EAAcC,IAAmBzD,EAAAA,EAAAA,UAAS,IAC3C0D,GAAWC,EAAAA,EAAAA,OAEVjD,EAAMkD,IAAW5D,EAAAA,EAAAA,UAAS,aAC1B6D,EAAYC,IAAoBC,EAAAA,EAAAA,IAAU,IAC1CC,EAAkBC,IAA0BF,EAAAA,EAAAA,IAAU,IAEtDG,EAAaC,IAAkBnE,EAAAA,EAAAA,UAAS,aACxCoE,EAAmBC,IAA2BN,EAAAA,EAAAA,IAAU,IACxDO,GAAyBC,KAC9BR,EAAAA,EAAAA,IAAU,GA4BNS,GAAmBC,MAAOC,EAASC,KACvC,MAAMC,EAAc,CAAEF,UAASC,YAC/B,UACQjB,GAASmB,EAAAA,EAAAA,IAAoBD,IAAcE,SACjDC,EAAAA,GAAMC,QAAQ,oBAAqB,CAAEC,SAAU,cACjD,CAAE,MAAOC,GACPH,EAAAA,GAAMI,MAAM,GAAGR,kBACfS,QAAQD,MAAMD,EAChB,GAoCIG,GACuB,KAA3BvF,EAAO6C,SAAS2C,QACQ,KAAxBxF,EAAO+C,MAAMyC,QACbxF,EAAO8C,SAASrC,QAAU,GAC1BT,EAAO8C,WAAa9C,EAAOqD,gBAE7B,OACEoC,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAYE,SAAA,EAC1B4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAqBE,SAAA,EACnCJ,EAAAA,EAAAA,KAAA,KAAGT,UAAWW,EAAaE,SAAC,kBAE5BJ,EAAAA,EAAAA,KAACiE,EAAAA,GAAI,CAACC,GAAG,cAAc3E,UAAWW,EAAoBE,SAAC,eAKzD4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAYE,SAAA,EAC1B4D,EAAAA,EAAAA,MAAA,QAAMzE,UAAWW,EAAaiE,SAvFdC,IAGpB,GAFAA,EAAEC,kBAEGzF,IAAkB,OAEvB,MAAM,gBAAEgD,KAAoB0C,GAAiC/F,EAE7D4D,GAASoC,EAAAA,EAAAA,IAASD,IACff,SACAiB,KAAK,KACJhG,EAAU,CACR4C,SAAU,GACVE,MAAO,GACPD,SAAU,GACVO,gBAAiB,KAEnB4B,EAAAA,GAAMC,QAAQ,8BAEfgB,MAAOd,IACNE,QAAQD,MAAMD,GACdzB,EAAgB,2CAChBsB,EAAAA,GAAMI,MAAM,6CAEhBJ,EAAAA,GAAMC,QAAQ,6BAgE2CrD,SAAA,EACnD4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAcE,SAAA,EAC5B4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAsBE,SAAA,EACpCJ,EAAAA,EAAAA,KAAA,OAAKT,UAAWW,EAAoBE,UAClCJ,EAAAA,EAAAA,KAACf,EAAAA,EAAK,CACJY,aAAa,KACbD,YAAY,OACZF,MAAM,OACNP,KAAM,OACNQ,MAAOpB,EAAO6C,SACd3B,aAAe2E,IACb5F,EAAU,IAAKD,EAAQ6C,SAAUgD,EAAEM,OAAO/E,SAE5CG,WAAYA,EAAW,YACvBV,YAAY,OACZC,UAAU,MAGbwB,EAAQO,WAAa7C,EAAO6C,WAC3BpB,EAAAA,EAAAA,KAAA,KAAGT,UAAWW,EAAkBE,SAAC,iBAGrC4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAsBE,SAAA,EACpCJ,EAAAA,EAAAA,KAAA,OAAKT,UAAWW,EAAoBE,UAClCJ,EAAAA,EAAAA,KAACf,EAAAA,EAAK,CACJY,aAAa,KACbD,YAAY,OACZF,MAAM,OACNP,KAAK,QACLQ,MAAOpB,EAAO+C,MACd7B,aAAe2E,IACb5F,EAAU,IAAKD,EAAQ+C,MAAO8C,EAAEM,OAAO/E,SAEzCG,WAAYA,EAAW,SACvBV,YAAY,SACZC,UAAU,MAGbwB,EAAQS,QAAU/C,EAAO+C,QACxBtB,EAAAA,EAAAA,KAAA,KAAGT,UAAWW,EAAkBE,SAAC,iBAGrC4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAsBE,SAAA,EACpC4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAoBE,SAAA,CACjCkC,IACCtC,EAAAA,EAAAA,KAAC2E,EAAAA,IAAM,CACLC,KAAK,qBACLvE,QAASA,KACPkC,IACAG,IACAL,EAAQ,SAEVwC,KAAK,OACLtF,UAAWW,IAGduC,IACCzC,EAAAA,EAAAA,KAAC8E,EAAAA,IAAY,CACXF,KAAK,UACLvE,QAASA,KACPkC,IACAG,IACAL,EAAQ,aAEVwC,KAAK,OACLtF,UAAWW,KAGfF,EAAAA,EAAAA,KAACf,EAAAA,EAAK,CACJY,aAAa,KACbD,YAAY,OACZF,MAAM,OACNP,KAAMA,EACNQ,MAAOpB,EAAO8C,SACd5B,aAAe2E,IACb5F,EAAU,IAAKD,EAAQ8C,SAAU+C,EAAEM,OAAO/E,SAE5CG,WAAYA,EAAW,YACvBV,YAAY,WACZC,UAAU,OAGbwB,EAAQQ,WAAa9C,EAAO8C,WAC3BrB,EAAAA,EAAAA,KAAA,KAAGT,UAAWW,EAAkBE,SAAC,iBAGrC4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAsBE,SAAA,EACpC4D,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAoBE,SAAA,CACjCyC,IACC7C,EAAAA,EAAAA,KAAC2E,EAAAA,IAAM,CACLC,KAAK,qBACLvE,QAASA,KACPyC,IACAE,KACAJ,EAAe,SAEjBiC,KAAK,OACLtF,UAAWW,IAGd6C,KACC/C,EAAAA,EAAAA,KAAC8E,EAAAA,IAAY,CACXF,KAAK,UACLvE,QAASA,KACPyC,IACAE,KACAJ,EAAe,aAEjBiC,KAAK,OACLtF,UAAWW,KAGfF,EAAAA,EAAAA,KAACf,EAAAA,EAAK,CACJY,aAAa,KACbD,YAAY,OACZF,MAAM,OACNP,KAAMwD,EACNhD,MAAOpB,EAAOqD,gBACdnC,aAAe2E,GACb5F,EAAU,IAAKD,EAAQqD,gBAAiBwC,EAAEM,OAAO/E,QAEnDG,WAAYA,EAAW,mBACvBV,YAAY,mBACZC,UAAU,OAGbwB,EAAQe,kBAAoBrD,EAAOqD,kBAClC5B,EAAAA,EAAAA,KAAA,KAAGT,UAAWW,EAAkBE,SAAC,aAElCS,EAAQe,iBACPrD,EAAO8C,WAAa9C,EAAOqD,kBACzB5B,EAAAA,EAAAA,KAAA,KAAGT,UAAWW,EAAkBE,SAAC,6BAGvCJ,EAAAA,EAAAA,KAAA,OAAKT,UAAWW,EAA2BE,UACzCJ,EAAAA,EAAAA,KAAA,OACET,UAAWW,EACXD,MAAO,CACLP,MAAWqC,EAAmB,EAAK,IAA5B,IACPgD,gBACEhD,EAAmB,EACf,MACAA,EAAmB,EACnB,SACA,iBAIdiC,EAAAA,EAAAA,MAAA,OAAKzE,UAAWW,EAAwBE,SAAA,CACrC6B,IAAgBjC,EAAAA,EAAAA,KAAA,KAAGT,UAAWW,EAAaE,SAAE6B,KAC9CjC,EAAAA,EAAAA,KAACgF,EAAAA,EAAM,CAACC,UAAWnB,GAAaxE,QAAQ,OAAOH,KAAK,SAAQiB,SAAC,wBAKjE4D,EAAAA,EAAAA,MAAA,KAAGzE,UAAWW,EAAuBE,SAAA,EACnCJ,EAAAA,EAAAA,KAAA,QAAMT,UAAWW,KACjBF,EAAAA,EAAAA,KAAA,QAAAI,SAAM,QACNJ,EAAAA,EAAAA,KAAA,QAAMT,UAAWW,QAEnBF,EAAAA,EAAAA,KAAA,OAAKT,UAAWW,EAAwBE,UACtCJ,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLiF,KAAM,EACNC,QAAS,OACTC,eAAgB,SAChBC,WAAY,YACZC,aAAc,OACdlF,UACFJ,EAAAA,EAAAA,KAACuF,EAAAA,EAAW,CACVC,UAAYC,IACV,MAAMtC,GAAUuC,EAAAA,EAAAA,GAAUD,EAAmBE,YAC7C1C,GACE,CACE2C,GAAIzC,EAAQ0C,IACZrG,KAAM2D,EAAQ3D,KACd8B,MAAO6B,EAAQ7B,MACfwE,OAAQ3C,EAAQ4C,SAElB,WAGJC,QAASA,IAAMxC,EAAAA,GAAMI,MAAM,uBAC3BiB,KAAK,QACLoB,MAAM,cACNC,MAAM,cACNxG,MAAM,cAKZM,EAAAA,EAAAA,KAAA,OAAKT,UAAWW,EAAwBE,UACtCJ,EAAAA,EAAAA,KAACmG,IAAa,CACZ5G,UAAWW,EACXkG,MAAOC,mBACPC,UAAU,EACV/H,OAAO,qBACPgI,MAAM,uBACNC,SAvPkBC,IAAc,IAADC,EAAAC,EAAAC,EAAAC,EAGvC,GAFAhD,QAAQiD,IAAI,mBAAoBL,IAE3BA,EAEH,YADAjD,EAAAA,GAAMI,MAAM,iCAId,GAAwB,YAApB6C,EAASM,OAEX,YADAvD,EAAAA,GAAMI,MAAM,sCAKZ6C,EAASO,aAAoC,QAAzBN,EAAID,EAASQ,oBAAY,IAAAP,GAArBA,EAAuBM,YADjD,MAEMpB,EACJa,EAASb,IAAMa,EAASS,SAA+B,QAAzBP,EAAIF,EAASQ,oBAAY,IAAAN,OAAA,EAArBA,EAAuBO,SAAU,KAC/D1H,EAAOiH,EAASjH,MAAQ,KACxB8B,EAAQmF,EAASnF,OAAS,KAC1BwE,GAAyB,QAAhBc,EAAAH,EAASV,eAAO,IAAAa,GAAM,QAANC,EAAhBD,EAAkBO,YAAI,IAAAN,OAAN,EAAhBA,EAAwBO,MAAO,KAU9CnE,GARgB,CACd2C,KACApG,OACA8B,QACAwE,UAIwB,sBAgO9B,E,wBCtVA,QAA0B,8BAA1B,EAAoE,gCAApE,EAAiH,iCCCjH,QCMe,WACb,OACE9B,EAAAA,EAAAA,MAAA,WAASzE,UAAWW,EAAeE,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,OAAKT,UAAWW,EAAiBE,UAC/BJ,EAAAA,EAAAA,KAAA,OAAKqH,IAAKC,EAAWC,IAAI,YAE3BvH,EAAAA,EAAAA,KAAA,OAAKT,UAAWW,EAAkBE,UAChCJ,EAAAA,EAAAA,KAAA,OAAKqH,IAAKG,EAAYD,IAAI,aAE5BvH,EAAAA,EAAAA,KAACyH,EAAY,MAGnB,C,gDClBe,SAASjF,EAAUkF,GAC9B,MAAOC,EAAQC,IAAanJ,EAAAA,EAAAA,UAASiJ,GAMrC,MAAO,CAACC,EAJR,WACIC,GAAWD,EACf,EAGJ,C,wDCTA,QAAyB,uBAAzB,EAAyD,uB,aCCzD,QCIe,SAAezI,GAQ1B,IAR2B,KAC7BC,EAAI,SACJiB,EAAQ,QACRd,EAAU,GAAE,MACZ4G,EAAQ,QAAO,YACfnG,EAAW,SACXkF,EAAQ,UACR1F,GACDL,EACC,OACEc,EAAAA,EAAAA,KAAA,UACEiF,SAAUA,EACV5E,QAASN,EACTZ,KAAMA,EACNI,WAAWgB,EAAAA,EAAAA,GACTL,EACY,SAAZZ,EACIY,EACY,SAAZZ,EACU,WAAV4G,EACEhG,EACAA,EACF,KACJX,GACAa,SACDA,GAGP,C","sources":["hooks/useFormValidation.js","webpack://my-react-app/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/validateRegister.js","hooks/usePasswordStrength.js","webpack://my-react-app/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://my-react-app/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/index.js","pages/RegisterPage/RegisterPage.jsx","hooks/useToggle.js","webpack://my-react-app/./src/components/commonComponents/Button/Button.module.css?4e57","components/commonComponents/Button/index.js","components/commonComponents/Button/Button.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useFormValidation = (initialState, validateFn) => {\r\n  const [fields, setFields] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateFields = () => {\r\n    const newErrors = validateFn(fields);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  return {\r\n    fields,\r\n    setFields,\r\n    errors,\r\n    validateFields,\r\n  };\r\n};\r\n\r\nexport default useFormValidation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__ovt5a\",\"inputCenter\":\"Input_inputCenter__8ObG8\",\"inputInfo\":\"Input_inputInfo__eUz4D\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n  handleClick,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        onClick={handleClick}\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleClick: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useFormTouched = (initialState = {}) => {\r\n  const [touched, setTouched] = useState(\r\n    Object.keys(initialState).reduce((acc, key) => {\r\n      acc[key] = false;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const handleBlur = (field) => () => {\r\n    setTouched((prev) => ({ ...prev, [field]: true }));\r\n  };\r\n\r\n  return {\r\n    touched,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useFormTouched;\r\n","const validateRegister = (fields) => {\r\n    const newErrors = {};\r\n    if (!fields.username) {\r\n        newErrors.username = \"Username is required\";\r\n    }\r\n    if (fields.password.length < 6) {\r\n        newErrors.password = \"Password must be at least 6 characters!\";\r\n    }\r\n    if (!fields.email) {\r\n        newErrors.email = \"Email is required\";\r\n    }\r\n    if (!fields.password) {\r\n        newErrors.password = \"Password is required\";\r\n    }\r\n\r\n    return newErrors;\r\n};\r\n\r\nexport default validateRegister;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst usePasswordStrength = (password) => {\r\n  const [strength, setStrength] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculatePasswordStrength = (password) => {\r\n      let strength = 0;\r\n\r\n      if (password.length > 7) strength += 1;\r\n      if (password.length > 10) strength += 1;\r\n      if (/[A-Z]/.test(password)) strength += 1;\r\n      if (/[0-9]/.test(password)) strength += 1;\r\n      if (/[^A-Za-z0-9]/.test(password)) strength += 1;\r\n\r\n      return strength;\r\n    };\r\n\r\n    setStrength(calculatePasswordStrength(password));\r\n  }, [password]);\r\n\r\n  return strength;\r\n};\r\n\r\nexport default usePasswordStrength;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"RegisterForm_cont__qtT83\",\"linkContainer\":\"RegisterForm_linkContainer__ZpwID\",\"navLinkTitle\":\"RegisterForm_navLinkTitle__oPW-l\",\"login\":\"RegisterForm_login__8TPII\",\"form\":\"RegisterForm_form__9EMEn\",\"inputs\":\"RegisterForm_inputs__y+Jhw\",\"inputContainer\":\"RegisterForm_inputContainer__eavDU\",\"inputWrapper\":\"RegisterForm_inputWrapper__zUAPo\",\"inputError\":\"RegisterForm_inputError__pqol5\",\"eyeIcon\":\"RegisterForm_eyeIcon__JsHiZ\",\"input\":\"RegisterForm_input__4yikh\",\"error\":\"RegisterForm_error__aEL6+\",\"buttonsContainer\":\"RegisterForm_buttonsContainer__HEysZ\",\"passwordStrengthBar\":\"RegisterForm_passwordStrengthBar__X6TCi\",\"passwordStrengthIndicator\":\"RegisterForm_passwordStrengthIndicator__kaSbw\",\"choiceContainer\":\"RegisterForm_choiceContainer__c+FZ1\",\"line\":\"RegisterForm_line__wzZ0G\",\"socialButtonCont\":\"RegisterForm_socialButtonCont__R2dbN\",\"facebookButton\":\"RegisterForm_facebookButton__xUJIh\"};","import React, { useState } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport FacebookLogin from \"@greatsumini/react-facebook-login\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { oAuthlLogInRegister, register } from \"../../redux/auth/operationsAuth\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\r\n\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport useFormValidation from \"../../hooks/useFormValidation\";\r\nimport validateRegister from \"../../hooks/validateRegister\";\r\nimport useFormTouched from \"../../hooks/useFormTouched\";\r\nimport usePasswordStrength from \"../../hooks/usePasswordStrength\";\r\n\r\nimport styles from \"./RegisterForm.module.css\";\r\n\r\nfunction RegisterForm() {\r\n  const { fields, setFields, validateFields } = useFormValidation(\r\n    {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    },\r\n    validateRegister\r\n  );\r\n\r\n  const { touched, handleBlur } = useFormTouched();\r\n  const passwordStrength = usePasswordStrength(fields.password);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [type, setType] = useState(\"password\");\r\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\r\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\r\n\r\n  const [confirmType, setConfirmType] = useState(\"password\");\r\n  const [confirmEyeVisible, toggleConfirmEyeVisible] = useToggle(true);\r\n  const [confirmClosedEyeVisible, toggleConfirmClosedEyeVisible] =\r\n    useToggle(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateFields()) return;\r\n\r\n    const { passwordConfirm, ...fieldsWithoutPasswordConfirm } = fields;\r\n\r\n    dispatch(register(fieldsWithoutPasswordConfirm))\r\n      .unwrap()\r\n      .then(() => {\r\n        setFields({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        });\r\n        toast.success(\"Registration successful!\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setErrorMessage(\"Account with this email already exists.\");\r\n        toast.error(\"Account with this email already exists.\");\r\n      });\r\n    toast.success(\"Registration successful!\");\r\n  };\r\n\r\n  const handleOAuthLogin = async (profile, provider) => {\r\n    const userPayload = { profile, provider };\r\n    try {\r\n      await dispatch(oAuthlLogInRegister(userPayload)).unwrap();\r\n      toast.success(\"Login successful!\", { position: \"top-center\" });\r\n    } catch (err) {\r\n      toast.error(`${provider} login failed`);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // callback FB common\r\n  const onFacebookResponse = (response) => {\r\n    console.log(\"FB raw response:\", response);\r\n\r\n    if (!response) {\r\n      toast.error(\"Facebook returned no response\");\r\n      return;\r\n    }\r\n\r\n    if (response.status === \"unknown\") {\r\n      toast.error(\"Facebook login failed or cancelled\");\r\n      return;\r\n    }\r\n\r\n    const accessToken =\r\n      response.accessToken || response.authResponse?.accessToken || null;\r\n    const id =\r\n      response.id || response.userID || response.authResponse?.userID || null;\r\n    const name = response.name || null;\r\n    const email = response.email || null;\r\n    const avatar = response.picture?.data?.url || null;\r\n\r\n    const profile = {\r\n      id,\r\n      name,\r\n      email,\r\n      avatar,\r\n    };\r\n\r\n    // handleOAuthLogin trebuie să accepte accessToken ca al treilea param\r\n    handleOAuthLogin(profile, \"facebook\", accessToken);\r\n  };\r\n\r\n  const isFormValid =\r\n    fields.username.trim() !== \"\" &&\r\n    fields.email.trim() !== \"\" &&\r\n    fields.password.length >= 6 &&\r\n    fields.password === fields.passwordConfirm;\r\n\r\n  return (\r\n    <div className={styles.cont}>\r\n      <div className={styles.linkContainer}>\r\n        <p className={styles.login}>Registration</p>\r\n\r\n        <Link to=\"/auth/login\" className={styles.navLinkTitle}>\r\n          Log In\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.form}>\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n          <div className={styles.inputs}>\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.inputWrapper}>\r\n                <Input\r\n                  autoComplete=\"on\"\r\n                  paddingLeft=\"18px\"\r\n                  width=\"100%\"\r\n                  type={\"text\"}\r\n                  value={fields.username}\r\n                  handleChange={(e) => {\r\n                    setFields({ ...fields, username: e.target.value });\r\n                  }}\r\n                  handleBlur={handleBlur(\"username\")}\r\n                  placeholder=\"Name\"\r\n                  required={true}\r\n                />\r\n              </div>\r\n              {touched.username && !fields.username && (\r\n                <p className={styles.inputError}>Required</p>\r\n              )}\r\n            </div>\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.inputWrapper}>\r\n                <Input\r\n                  autoComplete=\"on\"\r\n                  paddingLeft=\"18px\"\r\n                  width=\"100%\"\r\n                  type=\"email\"\r\n                  value={fields.email}\r\n                  handleChange={(e) => {\r\n                    setFields({ ...fields, email: e.target.value });\r\n                  }}\r\n                  handleBlur={handleBlur(\"email\")}\r\n                  placeholder=\"E-mail\"\r\n                  required={true}\r\n                />\r\n              </div>\r\n              {touched.email && !fields.email && (\r\n                <p className={styles.inputError}>Required</p>\r\n              )}\r\n            </div>\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.inputWrapper}>\r\n                {eyeVisible && (\r\n                  <VscEye\r\n                    fill=\"var(--brand-color)\"\r\n                    onClick={() => {\r\n                      toggleEyeVisible();\r\n                      toggleClosedEyeVisible();\r\n                      setType(\"text\");\r\n                    }}\r\n                    size=\"24px\"\r\n                    className={styles.eyeIcon}\r\n                  />\r\n                )}\r\n                {closedEyeVisible && (\r\n                  <VscEyeClosed\r\n                    fill=\"#4885e0\"\r\n                    onClick={() => {\r\n                      toggleEyeVisible();\r\n                      toggleClosedEyeVisible();\r\n                      setType(\"password\");\r\n                    }}\r\n                    size=\"24px\"\r\n                    className={styles.eyeIcon}\r\n                  />\r\n                )}\r\n                <Input\r\n                  autoComplete=\"on\"\r\n                  paddingLeft=\"18px\"\r\n                  width=\"100%\"\r\n                  type={type}\r\n                  value={fields.password}\r\n                  handleChange={(e) => {\r\n                    setFields({ ...fields, password: e.target.value });\r\n                  }}\r\n                  handleBlur={handleBlur(\"password\")}\r\n                  placeholder=\"Password\"\r\n                  required={true}\r\n                />\r\n              </div>\r\n              {touched.password && !fields.password && (\r\n                <p className={styles.inputError}>Required</p>\r\n              )}\r\n            </div>\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.inputWrapper}>\r\n                {confirmEyeVisible && (\r\n                  <VscEye\r\n                    fill=\"var(--brand-color)\"\r\n                    onClick={() => {\r\n                      toggleConfirmEyeVisible();\r\n                      toggleConfirmClosedEyeVisible();\r\n                      setConfirmType(\"text\");\r\n                    }}\r\n                    size=\"24px\"\r\n                    className={styles.eyeIcon}\r\n                  />\r\n                )}\r\n                {confirmClosedEyeVisible && (\r\n                  <VscEyeClosed\r\n                    fill=\"#4885e0\"\r\n                    onClick={() => {\r\n                      toggleConfirmEyeVisible();\r\n                      toggleConfirmClosedEyeVisible();\r\n                      setConfirmType(\"password\");\r\n                    }}\r\n                    size=\"24px\"\r\n                    className={styles.eyeIcon}\r\n                  />\r\n                )}\r\n                <Input\r\n                  autoComplete=\"on\"\r\n                  paddingLeft=\"18px\"\r\n                  width=\"100%\"\r\n                  type={confirmType}\r\n                  value={fields.passwordConfirm}\r\n                  handleChange={(e) =>\r\n                    setFields({ ...fields, passwordConfirm: e.target.value })\r\n                  }\r\n                  handleBlur={handleBlur(\"passwordConfirm\")}\r\n                  placeholder=\"Confirm Password\"\r\n                  required={true}\r\n                />\r\n              </div>\r\n              {touched.passwordConfirm && !fields.passwordConfirm && (\r\n                <p className={styles.inputError}>Required</p>\r\n              )}\r\n              {touched.passwordConfirm &&\r\n                fields.password !== fields.passwordConfirm && (\r\n                  <p className={styles.inputError}>Passwords must match</p>\r\n                )}\r\n            </div>\r\n            <div className={styles.passwordStrengthBar}>\r\n              <div\r\n                className={styles.passwordStrengthIndicator}\r\n                style={{\r\n                  width: `${(passwordStrength / 5) * 100}%`,\r\n                  backgroundColor:\r\n                    passwordStrength < 3\r\n                      ? \"red\"\r\n                      : passwordStrength < 4\r\n                      ? \"orange\"\r\n                      : \"green\",\r\n                }}></div>\r\n            </div>\r\n          </div>\r\n          <div className={styles.buttonsContainer}>\r\n            {errorMessage && <p className={styles.error}>{errorMessage}</p>}\r\n            <Button disabled={!isFormValid} variant=\"auth\" type=\"submit\">\r\n              Register Now\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <p className={styles.choiceContainer}>\r\n          <span className={styles.line}></span>\r\n          <span>or</span>\r\n          <span className={styles.line}></span>\r\n        </p>\r\n        <div className={styles.socialButtonCont}>\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              background: \"royalblue\",\r\n              borderRadius: \"6px\",\r\n            }}>\r\n            <GoogleLogin\r\n              onSuccess={(credentialResponse) => {\r\n                const profile = jwtDecode(credentialResponse.credential);\r\n                handleOAuthLogin(\r\n                  {\r\n                    id: profile.sub,\r\n                    name: profile.name,\r\n                    email: profile.email,\r\n                    avatar: profile.picture,\r\n                  },\r\n                  \"google\"\r\n                );\r\n              }}\r\n              onError={() => toast.error(\"Google login failed\")}\r\n              size=\"large\"\r\n              shape=\"rectangular\"\r\n              theme=\"filled_blue\"\r\n              width=\"100%\" // doar ca fallback\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.socialButtonCont}>\r\n          <FacebookLogin\r\n            className={styles.facebookButton}\r\n            appId={process.env.REACT_APP_FACEBOOK_APP_ID}\r\n            autoLoad={false}\r\n            fields=\"name,email,picture\"\r\n            scope=\"email,public_profile\"\r\n            callback={onFacebookResponse}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegisterPage_section__tu86j\",\"imageLeft\":\"RegisterPage_imageLeft__ssXtT\",\"imageRight\":\"RegisterPage_imageRight__g4mtc\"};","import RegisterPage from './RegisterPage.jsx'\r\n\r\nexport default RegisterPage","import React from \"react\";\r\nimport RegisterForm from \"../../components/RegisterForm/RegisterForm\";\r\n\r\nimport leftImage from \"../../images/login-background-left-side.png\";\r\nimport rightImage from \"../../images/login-background-right-side.png\";\r\n\r\nimport styles from \"./RegisterPage.module.css\";\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <section className={styles.section}>\r\n      <div className={styles.imageLeft}>\r\n        <img src={leftImage} alt=\"Left\" />\r\n      </div>\r\n      <div className={styles.imageRight}>\r\n        <img src={rightImage} alt=\"Right\" />\r\n      </div>\r\n      <RegisterForm />\r\n    </section>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue) {\r\n    const [isOpen, setIsOpen] = useState(initialValue);\r\n\r\n    function toggle() {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return [isOpen, toggle];\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DQKMR\",\"violet\":\"Button_violet__AJ44T\"};","import Button from \"./Button\";\r\n\r\nexport default Button;\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nexport default function Button({\r\n  type,\r\n  children,\r\n  variant = \"\",\r\n  theme = \"light\",\r\n  handleClick,\r\n  disabled,\r\n  className,\r\n}) {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      onClick={handleClick}\r\n      type={type}\r\n      className={clsx(\r\n        styles.button,\r\n        variant === \"auth\"\r\n          ? styles.button\r\n          : variant === \"send\"\r\n          ? theme === \"violet\"\r\n            ? styles.violet\r\n            : styles.button\r\n          : null, // If no match, fallback to no additional styles\r\n        className // Allow additional custom classes\r\n      )}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  className: PropTypes.string,\r\n};\r\n"],"names":["useFormValidation","initialState","validateFn","fields","setFields","useState","errors","setErrors","validateFields","newErrors","Object","keys","length","Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","handleClick","_jsx","style","styles","inputContainer","children","onClick","onChange","clsx","input","inputCenter","onBlur","arguments","undefined","touched","setTouched","reduce","acc","key","field","prev","username","password","email","strength","setStrength","useEffect","test","calculatePasswordStrength","passwordConfirm","validateRegister","useFormTouched","passwordStrength","usePasswordStrength","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","useToggle","closedEyeVisible","toggleClosedEyeVisible","confirmType","setConfirmType","confirmEyeVisible","toggleConfirmEyeVisible","confirmClosedEyeVisible","toggleConfirmClosedEyeVisible","handleOAuthLogin","async","profile","provider","userPayload","oAuthlLogInRegister","unwrap","toast","success","position","err","error","console","isFormValid","trim","_jsxs","Link","to","onSubmit","e","preventDefault","fieldsWithoutPasswordConfirm","register","then","catch","target","VscEye","fill","size","VscEyeClosed","backgroundColor","Button","disabled","flex","display","justifyContent","background","borderRadius","GoogleLogin","onSuccess","credentialResponse","jwtDecode","credential","id","sub","avatar","picture","onError","shape","theme","FacebookLogin","appId","process","autoLoad","scope","callback","response","_response$authRespons","_response$authRespons2","_response$picture","_response$picture$dat","log","status","accessToken","authResponse","userID","data","url","src","leftImage","alt","rightImage","RegisterForm","initialValue","isOpen","setIsOpen"],"sourceRoot":""}