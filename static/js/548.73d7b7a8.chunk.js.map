{"version":3,"file":"static/js/548.73d7b7a8.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/pages/VerifyEmailPageComponent/VerifyEmailPageComponent.module.css?1cb8","pages/VerifyEmailPageComponent/VerifyEmailPageComponent.jsx","webpack://my-react-app/./src/components/commonComponents/Button/Button.module.css?4e57","components/commonComponents/Button/index.js","components/commonComponents/Button/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"VerifyEmailPageComponent_container__gC8MD\",\"title\":\"VerifyEmailPageComponent_title__XdCqM\",\"message\":\"VerifyEmailPageComponent_message__tuJrE\",\"strong\":\"VerifyEmailPageComponent_strong__j1b6P\",\"infoCont\":\"VerifyEmailPageComponent_infoCont__xtXqk\",\"infoText\":\"VerifyEmailPageComponent_infoText__er9mZ\",\"emailLink\":\"VerifyEmailPageComponent_emailLink__NPJ9y\",\"link\":\"VerifyEmailPageComponent_link__ju5S-\"};","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resendVerificationEmail } from \"../../redux/auth/operationsAuth\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../../components/commonComponents/Button\";\r\nimport styles from \"./VerifyEmailPageComponent.module.css\";\r\n\r\nconst VerifyEmailPage = () => {\r\n  const { user, isLoggedIn, errorAuth } = useAuth();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Navigate to home if user is logged in or already verified\r\n    if (isLoggedIn || user?.verify) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [isLoggedIn, user, navigate]);\r\n\r\n  const handleResendVerificationEmail = () => {\r\n    if (!user) {\r\n      navigate(\"/auth/login\");\r\n      return;\r\n    }\r\n\r\n    // console.log(user);\r\n\r\n    dispatch(resendVerificationEmail(user?.email));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (errorAuth) {\r\n      console.error(\"Error:\", errorAuth);\r\n    }\r\n  }, [errorAuth]);\r\n\r\n  const getEmailProviderUrl = (email) => {\r\n    if (!email || !email.includes(\"@\")) {\r\n      console.warn(\"Invalid email format:\", email);\r\n      return \"https://mail.google.com\";\r\n    }\r\n\r\n    const domain = email?.split(\"@\")[1];\r\n    switch (domain) {\r\n      case \"gmail.com\":\r\n        return `https://mail.google.com/mail/u/0/#inbox`;\r\n      case \"yahoo.com\":\r\n        return `https://mail.yahoo.com`;\r\n      case \"outlook.com\":\r\n      case \"hotmail.com\":\r\n        return `https://outlook.live.com/mail/0/inbox`;\r\n      case \"icloud.com\":\r\n        return `https://www.icloud.com/mail`;\r\n      default:\r\n        return `https://mail.${domain}`;\r\n    }\r\n  };\r\n\r\n  const email = user?.email ?? \"your email address\";\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <h2 className={styles.title}>Please verify your email address</h2>\r\n      <p className={styles.message}>\r\n        We sent a verification link to your email:{\" \"}\r\n        <strong className={styles.strong}>{email}</strong>\r\n      </p>\r\n      <a\r\n        className={styles.emailLink}\r\n        href={getEmailProviderUrl(user?.email)}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\">\r\n        <Button variant=\"auth\">Go to your email provider</Button>\r\n      </a>\r\n      <Button\r\n        handleClick={() => {\r\n          handleResendVerificationEmail();\r\n        }}\r\n        type=\"button\"\r\n        variant=\"auth\">\r\n        Resend Verification Email\r\n      </Button>\r\n\r\n      {errorAuth && typeof errorAuth === \"string\" && (\r\n        <p className={styles.error}>{errorAuth}</p>\r\n      )}\r\n\r\n      <div className={styles.infoCont}>\r\n        <p className={styles.infoText}>\r\n          If you've already verified your email, you can go to the\r\n        </p>\r\n\r\n        <Button\r\n          variant=\"auth\"\r\n          handleClick={() => {\r\n            navigate(\"/auth/login\");\r\n          }}>\r\n          Login page\r\n        </Button>\r\n\r\n        <p className={styles.infoText}>to sign in.</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default VerifyEmailPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DQKMR\",\"violet\":\"Button_violet__AJ44T\"};","import Button from \"./Button\";\r\n\r\nexport default Button;\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nexport default function Button({\r\n  type,\r\n  children,\r\n  variant = \"\",\r\n  theme = \"light\",\r\n  handleClick,\r\n  disabled,\r\n  className,\r\n}) {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      onClick={handleClick}\r\n      type={type}\r\n      className={clsx(\r\n        styles.button,\r\n        variant === \"auth\"\r\n          ? styles.button\r\n          : variant === \"send\"\r\n          ? theme === \"violet\"\r\n            ? styles.violet\r\n            : styles.button\r\n          : null, // If no match, fallback to no additional styles\r\n        className // Allow additional custom classes\r\n      )}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  className: PropTypes.string,\r\n};\r\n"],"names":["VerifyEmailPage","_user$email","user","isLoggedIn","errorAuth","useAuth","dispatch","useDispatch","navigate","useNavigate","useEffect","verify","console","error","email","_jsxs","className","styles","container","children","_jsx","title","message","strong","emailLink","href","includes","warn","domain","split","getEmailProviderUrl","target","rel","Button","variant","handleClick","resendVerificationEmail","type","infoCont","infoText","_ref","theme","disabled","onClick","clsx"],"sourceRoot":""}