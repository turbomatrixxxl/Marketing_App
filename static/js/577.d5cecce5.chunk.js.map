{"version":3,"file":"static/js/577.d5cecce5.chunk.js","mappings":"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","sources":["hooks/useFormValidation.js","webpack://my-react-app/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/validateEmail.js","webpack://my-react-app/./src/components/ForgotPasswordForm/ForgotPasswordForm.module.css?0487","components/ForgotPasswordForm/ForgotPasswordForm.jsx","components/ForgotPasswordForm/index.js","webpack://my-react-app/./src/pages/ForgotPasswordPage/ForgotPasswordPage.module.css?f1b2","pages/ForgotPasswordPage/index.js","pages/ForgotPasswordPage/ForgotPasswordPage.jsx","hooks/useFormTouched.js","webpack://my-react-app/./src/components/commonComponents/Button/Button.module.css?4e57","components/commonComponents/Button/index.js","components/commonComponents/Button/Button.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useFormValidation = (initialState, validateFn) => {\r\n  const [fields, setFields] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateFields = () => {\r\n    const newErrors = validateFn(fields);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  return {\r\n    fields,\r\n    setFields,\r\n    errors,\r\n    validateFields,\r\n  };\r\n};\r\n\r\nexport default useFormValidation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__ovt5a\",\"inputCenter\":\"Input_inputCenter__8ObG8\",\"inputInfo\":\"Input_inputInfo__eUz4D\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n  handleClick,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        onClick={handleClick}\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleClick: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","const validateEmail = (fields) => {\r\n  const errors = {};\r\n  if (!fields.email) {\r\n    errors.email = \"Email is required\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validateEmail;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ForgotPasswordForm_form__RE4cG\",\"cont\":\"ForgotPasswordForm_cont__Pn1fM\",\"title\":\"ForgotPasswordForm_title__j3OeJ\",\"text\":\"ForgotPasswordForm_text__Yf-yu\",\"inputsCont\":\"ForgotPasswordForm_inputsCont__sbPSe\",\"inputContainer\":\"ForgotPasswordForm_inputContainer__MxJmf\",\"inputWrapper\":\"ForgotPasswordForm_inputWrapper__X20qM\",\"input\":\"ForgotPasswordForm_input__vD72S\",\"inputError\":\"ForgotPasswordForm_inputError__lb0UX\",\"error\":\"ForgotPasswordForm_error__bQaGx\",\"buttonsContainer\":\"ForgotPasswordForm_buttonsContainer__4kLcr\",\"button\":\"ForgotPasswordForm_button__D59tT\",\"navLink\":\"ForgotPasswordForm_navLink__+vZqx\"};","import React, { useState } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { forgotPassword } from \"../../redux/auth/operationsAuth\";\r\n\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\n\r\nimport useFormValidation from \"../../hooks/useFormValidation\";\r\nimport validateEmail from \"../../hooks/validateEmail\";\r\nimport useFormTouched from \"../../hooks/useFormTouched\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport styles from \"./ForgotPasswordForm.module.css\";\r\n\r\nfunction ForgotPasswordForm() {\r\n  const { fields, setFields, validateFields } = useFormValidation(\r\n    { email: \"\" },\r\n    validateEmail\r\n  );\r\n\r\n  const { touched, handleBlur } = useFormTouched(fields);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateFields()) return;\r\n\r\n    try {\r\n      await dispatch(forgotPassword(fields)).unwrap();\r\n      toast.success(\"Email sent successful!\", { position: \"top-center\" });\r\n    } catch (error) {\r\n      setErrorMessage(\"You have entered an invalid email.\");\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  const isFormValid = fields.email.trim() !== \"\";\r\n\r\n  return (\r\n    <div className={styles.cont}>\r\n      <h1 className={styles.title}>Forgot Password</h1>\r\n\r\n      <p className={styles.text}>\r\n        An email will be sent to Your email address to reset the password\r\n      </p>\r\n\r\n      <div className={styles.form}>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <div className={styles.inputsCont}>\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.inputWrapper}>\r\n                <Input\r\n                  className={styles.input}\r\n                  autoComplete=\"on\"\r\n                  paddingLeft=\"18px\"\r\n                  width=\"100%\"\r\n                  type=\"email\"\r\n                  value={fields.email}\r\n                  handleChange={(e) =>\r\n                    setFields({ ...fields, email: e.target.value })\r\n                  }\r\n                  handleBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Enter your email\"\r\n                  required\r\n                />\r\n              </div>\r\n              {touched.email && !fields.email && (\r\n                <p className={styles.inputError}>Required</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.buttonsContainer}>\r\n            {errorMessage && <p className={styles.error}>{errorMessage}</p>}\r\n            <Button disabled={!isFormValid} variant=\"auth\" type=\"submit\">\r\n              Send Mail\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n","import ForgotPasswordForm from \"./ForgotPasswordForm\";\r\n\r\nexport default ForgotPasswordForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ForgotPasswordPage_section__CLBWa\",\"imageLeft\":\"ForgotPasswordPage_imageLeft__pjmLA\",\"imageRight\":\"ForgotPasswordPage_imageRight__dLGwm\"};","import ForgotPasswordPage from \"./ForgotPasswordPage\";\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ForgotPasswordForm from \"../../components/ForgotPasswordForm\";\r\n\r\nimport leftImage from \"../../images/login-background-left-side.png\";\r\nimport rightImage from \"../../images/login-background-right-side.png\";\r\n\r\nimport styles from \"./ForgotPasswordPage.module.css\";\r\n\r\nexport default function ForgotPasswordPage() {\r\n  return (\r\n    <section className={styles.section}>\r\n      <div className={styles.imageLeft}>\r\n        <img src={leftImage} alt=\"Left\" />\r\n      </div>\r\n      <div className={styles.imageRight}>\r\n        <img src={rightImage} alt=\"Right\" />\r\n      </div>\r\n      <ForgotPasswordForm />\r\n    </section>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useFormTouched = (initialState = {}) => {\r\n  const [touched, setTouched] = useState(\r\n    Object.keys(initialState).reduce((acc, key) => {\r\n      acc[key] = false;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const handleBlur = (field) => () => {\r\n    setTouched((prev) => ({ ...prev, [field]: true }));\r\n  };\r\n\r\n  return {\r\n    touched,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useFormTouched;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DQKMR\",\"violet\":\"Button_violet__AJ44T\"};","import Button from \"./Button\";\r\n\r\nexport default Button;\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nexport default function Button({\r\n  type,\r\n  children,\r\n  variant = \"\",\r\n  theme = \"light\",\r\n  handleClick,\r\n  disabled,\r\n  className,\r\n}) {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      onClick={handleClick}\r\n      type={type}\r\n      className={clsx(\r\n        styles.button,\r\n        variant === \"auth\"\r\n          ? styles.button\r\n          : variant === \"send\"\r\n          ? theme === \"violet\"\r\n            ? styles.violet\r\n            : styles.button\r\n          : null, // If no match, fallback to no additional styles\r\n        className // Allow additional custom classes\r\n      )}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  className: PropTypes.string,\r\n};\r\n"],"names":["useFormValidation","initialState","validateFn","fields","setFields","useState","errors","setErrors","validateFields","newErrors","Object","keys","length","Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","handleClick","_jsx","style","styles","inputContainer","children","onClick","onChange","clsx","input","inputCenter","onBlur","email","validateEmail","touched","useFormTouched","errorMessage","setErrorMessage","dispatch","useDispatch","isFormValid","trim","_jsxs","onSubmit","async","e","preventDefault","forgotPassword","unwrap","toast","success","position","error","target","Button","disabled","src","leftImage","alt","rightImage","ForgotPasswordForm","arguments","undefined","setTouched","reduce","acc","key","field","prev","theme"],"sourceRoot":""}