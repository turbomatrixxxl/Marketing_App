{"version":3,"file":"static/js/460.44dcc42c.chunk.js","mappings":"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","sources":["redux/public/selectorsChats.js","hooks/useChats.js","utils/safeToDate.js","webpack://my-react-app/./src/components/ChatsList/ChatsList.module.css?3c66","components/ChatsList/ChatsList.jsx","components/ChatsList/index.js","webpack://my-react-app/./src/components/commonComponents/ChatInput/ChatInput.module.css?8275","components/commonComponents/ChatInput/index.js","components/commonComponents/ChatInput/ChatInput.jsx","webpack://my-react-app/./src/components/ChatsAside/ChatsAside.module.css?1726","components/ChatsAside/ChatsAside.jsx","webpack://my-react-app/./src/components/ActiveChatModal/ActiveChatModal.module.css?f0c9","components/ActiveChatModal/ActiveChatModal.jsx","webpack://my-react-app/./src/components/ChatHeader/ChatHeader.module.css?1ebc","components/ChatHeader/ChatHeader.jsx","components/ChatHeader/index.js","webpack://my-react-app/./src/pages/ChatPage/ChatPage.module.css?88db","pages/ChatPage/index.js","pages/ChatPage/ChatPage.jsx"],"sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectChatsState = (state) => state.chats;\r\n\r\nexport const selectActiveChats = createSelector(\r\n  [selectChatsState],\r\n  (chatsState) => chatsState.activeChats\r\n);\r\n\r\nexport const selectChats = createSelector(\r\n  [selectChatsState],\r\n  (chatsState) => chatsState.chats\r\n);\r\n\r\nexport const selectLoading = createSelector(\r\n  [selectChatsState],\r\n  (chatsState) => chatsState.loading\r\n);\r\n\r\nexport const selectError = createSelector(\r\n  [selectChatsState],\r\n  (chatsState) => chatsState.error\r\n);\r\n\r\nexport const selectVisitedChatIds = createSelector(\r\n  [selectChatsState],\r\n  (chatsState) => chatsState.visitedChatIds\r\n);\r\n\r\nconst chatByIdSelectorCache = {};\r\n\r\nexport const selectChatById = (chatId) => {\r\n  if (!chatByIdSelectorCache[chatId]) {\r\n    chatByIdSelectorCache[chatId] = createSelector(\r\n      [selectChats],\r\n      (chats) => chats.find((chat) => chat.id === chatId) || null\r\n    );\r\n  }\r\n  return chatByIdSelectorCache[chatId];\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectError,\r\n  selectActiveChats,\r\n  selectLoading,\r\n  selectChats,\r\n  selectChatById,\r\n  selectVisitedChatIds,\r\n} from \"../redux/public/selectorsChats\";\r\n\r\nexport const useChats = () => {\r\n  const dispatch = useDispatch();\r\n  const activeChats = useSelector(selectActiveChats);\r\n  const isLoading = useSelector(selectLoading);\r\n  const errorChats = useSelector(selectError);\r\n  const chats = useSelector(selectChats);\r\n  const chatById = useSelector(selectChatById);\r\n  const visitedChatIds = useSelector(selectVisitedChatIds);\r\n\r\n  return {\r\n    activeChats,\r\n    isLoading,\r\n    errorChats,\r\n    chats,\r\n    chatById,\r\n    dispatch,\r\n    visitedChatIds,\r\n  };\r\n};\r\n","// Repară timestamp-urile \"corupte\" și întoarce un obiect Date valid sau null\r\nexport default function safeToDate(ts) {\r\n  if (!ts) return null;\r\n\r\n  // 1) încercare directă\r\n  const d1 = new Date(ts);\r\n  if (!isNaN(d1.getTime())) return d1;\r\n\r\n  // 2) repară secunde > 59 în format ISO (cu sau fără ms)\r\n  const fixed = ts.replace(\r\n    /T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{1,3}))?Z$/,\r\n    (_, hh, mm, ss, ms = \"000\") =>\r\n      `T${hh}:${mm}:${Math.min(Number(ss), 59)\r\n        .toString()\r\n        .padStart(2, \"0\")}.${ms.padEnd(3, \"0\")}Z`\r\n  );\r\n\r\n  const d2 = new Date(fixed);\r\n  if (!isNaN(d2.getTime())) return d2;\r\n\r\n  // 3) fallback: parse manual\r\n  const d3 = new Date(Date.parse(ts));\r\n  return isNaN(d3.getTime()) ? null : d3;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ChatsList_list__FlZ6G\",\"listItem\":\"ChatsList_listItem__zxfOQ\",\"globalLink\":\"ChatsList_globalLink__sxqW3\",\"active\":\"ChatsList_active__zhMD0\",\"isBlocked\":\"ChatsList_isBlocked__QUxjE\",\"youAreBlocked\":\"ChatsList_youAreBlocked__Y4FSN\",\"youAreBlockedSpan\":\"ChatsList_youAreBlockedSpan__2ScBk\",\"isBlockedSpan\":\"ChatsList_isBlockedSpan__GKqD9\",\"imgCont\":\"ChatsList_imgCont__JmYwI\",\"userImg\":\"ChatsList_userImg__XjskM\",\"global\":\"ChatsList_global__Hs7l3\",\"isOnline\":\"ChatsList_isOnline__YoV65\",\"online\":\"ChatsList_online__cCUJM\",\"notOnline\":\"ChatsList_notOnline__LsGCh\",\"infoCont\":\"ChatsList_infoCont__Fsgba\",\"name\":\"ChatsList_name__7rZVZ\",\"lastMessage\":\"ChatsList_lastMessage__zfTJs\",\"notRead\":\"ChatsList_notRead__KnXUc\",\"settingsCont\":\"ChatsList_settingsCont__ojlZo\",\"btnCont\":\"ChatsList_btnCont__dYM4I\",\"modalCont\":\"ChatsList_modalCont__puUiq\",\"modalContDark\":\"ChatsList_modalContDark__4YNbL\",\"modalContViolet\":\"ChatsList_modalContViolet__GtKXG\",\"modalBtn\":\"ChatsList_modalBtn__OuhR2\",\"modalBtnB\":\"ChatsList_modalBtnB__j9ZRt\",\"modalBtnNb\":\"ChatsList_modalBtnNb__kUcJO\",\"modalBtnNotLight\":\"ChatsList_modalBtnNotLight__eR9DR\"};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { NavLink, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  accessChat,\r\n  toggleBlockUser,\r\n  deleteUser,\r\n  markChatAsRead,\r\n  markGlobalChatAsRead,\r\n} from \"../../redux/public/chatsSlice\"; // Assuming this is your async action\r\n\r\nimport { useChats } from \"../../hooks/useChats\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport safeToDate from \"../../utils/safeToDate\";\r\n\r\nimport { FaCog } from \"react-icons/fa\";\r\n\r\nimport roby from \"../../images/Roby.jpg\";\r\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\r\nimport glob from \"../../images/global.png\";\r\n\r\nimport styles from \"./ChatsList.module.css\";\r\n\r\nconst breakpoints = {\r\n  mobile: \"(max-width: 767px)\",\r\n  tablet: \"(min-width:768px)\",\r\n  desktop: \"(min-width:1115px)\",\r\n};\r\nexport default function ChatsList({ search, theme }) {\r\n  const { chats } = useChats();\r\n  const { chatId } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  const [reloadMap, setReloadMap] = useState({});\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n\r\n  // console.log(\"chats :\", chats);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n        setIsSettingsVisible(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [modalRef]);\r\n\r\n  useEffect(() => {\r\n    if (chatId) {\r\n      dispatch(markChatAsRead({ chatId }));\r\n    }\r\n  }, [dispatch, chatId]);\r\n\r\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\r\n\r\n  const handleImageError = (chatId) => {\r\n    setTimeout(() => {\r\n      setReloadMap((prev) => ({\r\n        ...prev,\r\n        [chatId]: (prev[chatId] || 0) + 1,\r\n      }));\r\n    }, 1000);\r\n  };\r\n\r\n  // var 1 cu reduce\r\n  // const getLastInboxMessage = (chat) => {\r\n  //   const inboxMessages = chat?.messages?.filter((msg) => msg?.isInbox);\r\n  //   if (!inboxMessages?.length) return null;\r\n  //   const lastInboxMessage = inboxMessages?.reduce((latest, msg) =>\r\n  //     new Date(safeToDate(msg.sentAt)) > new Date(safeToDate(latest.sentAt))\r\n  //       ? msg\r\n  //       : latest\r\n  //   );\r\n\r\n  //   console.log(lastInboxMessage);\r\n\r\n  //   return lastInboxMessage;\r\n  // };\r\n\r\n  // var 2 cu reduce\r\n  // function getLastInboxMessage(chat) {\r\n  //   const inbox = chat?.messages?.filter((m) => m?.isInbox) ?? [];\r\n  //   if (!inbox.length) return null;\r\n\r\n  //   return inbox.reduce((latest, msg) => {\r\n  //     const dMsg = safeToDate(msg.sentAt);\r\n  //     const dLatest = safeToDate(latest.sentAt);\r\n  //     if (!dLatest) return msg; // dacă latest e invalid, ia msg\r\n  //     if (!dMsg) return latest; // dacă msg e invalid, păstrează latest\r\n  //     return dMsg > dLatest ? msg : latest;\r\n  //   });\r\n  // }\r\n\r\n  // var 3 cu sort\r\n  // const getLastInboxMessage = (chat) => {\r\n  //   if (!chat?.messages) return null;\r\n\r\n  //   const inboxMessages = chat.messages.filter((msg) => msg?.isInbox);\r\n  //   if (!inboxMessages.length) return null;\r\n\r\n  //   const sortedInboxMessages = inboxMessages\r\n  //     .slice() // copie ca să nu modifici array-ul original\r\n  //     .sort((a, b) => safeToDate(a.sentAt) - safeToDate(b.sentAt));\r\n\r\n  //   return sortedInboxMessages[sortedInboxMessages.length - 1] || null;\r\n  // };\r\n\r\n  // var 4 a mea cu sort\r\n  // const getLastInboxMessage = (chat) => {\r\n  //   const inboxMessages = chat?.messages?.filter((msg) => msg?.isInbox);\r\n  //   if (!inboxMessages?.length) return null;\r\n  //   const sortedInboxMessages = inboxMessages?.sort(\r\n  //     (a, b) => safeToDate(a.sentAt) - safeToDate(b.sentAt)\r\n  //   );\r\n\r\n  //   // console.log(\"lastInboxMessage :\", sortedInboxMessages);\r\n  //   const indexOfLastMessage = Number(sortedInboxMessages.length - 1);\r\n\r\n  //   // console.log(indexOfLastMessage);\r\n\r\n  //   return sortedInboxMessages[indexOfLastMessage];\r\n  // };\r\n\r\n  // var 5 cu reduce\r\n  function getLastInboxMessage(chat) {\r\n    const inboxMessages = chat?.messages?.filter((m) => m?.isInbox) || [];\r\n    if (!inboxMessages.length) return null;\r\n\r\n    return inboxMessages.reduce((latest, msg) => {\r\n      const dateMsg = safeToDate(msg.sentAt);\r\n      const dateLatest = safeToDate(latest.sentAt);\r\n\r\n      if (!dateMsg) return latest; // mesaj corupt → ignoră\r\n      if (!dateLatest) return msg; // latest corupt → ia msg\r\n\r\n      return dateMsg > dateLatest ? msg : latest;\r\n    }, inboxMessages[0]);\r\n  }\r\n\r\n  const filteredChats = (chats || []).filter((chat) => {\r\n    if (chat?.id === \"global\" || chat?.id === \"admin\") {\r\n      return false;\r\n    }\r\n    return chat?.user?.name?.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  // console.log(\"filteredChats :\", filteredChats);\r\n\r\n  const adminChats = chats?.filter((chat) => chat?.id === \"admin\");\r\n\r\n  // console.log(\"adminChats :\", adminChats);\r\n\r\n  const globalChats = chats?.find((chat) => chat?.id === \"global\");\r\n  const globalMessages = [];\r\n\r\n  // globalChats?.users?.map((user) => {\r\n  //   const userMessages = [];\r\n  //   const userInfo = { userId: user?.id, user: user?.user };\r\n  //   user?.messages.map((msg) => {\r\n  //     const completeDataMsg = { ...msg, ...userInfo };\r\n  //     return userMessages.push(completeDataMsg);\r\n  //   });\r\n  //   return globalMessages.push(...userMessages);\r\n  // });\r\n\r\n  globalChats?.users?.forEach((us) => {\r\n    const userInfo = { userId: us?.id, user: us?.user };\r\n    us?.messages?.forEach((msg) => {\r\n      globalMessages.push({ ...msg, ...userInfo });\r\n    });\r\n  });\r\n\r\n  // console.log(\"globalMessages :\", globalMessages);\r\n\r\n  // console.log(\"globalChats :\", globalChats);\r\n\r\n  function getLastGlobalInboxMessage(globalMessages) {\r\n    if (!globalMessages?.length) return null;\r\n\r\n    return globalMessages\r\n      .filter((msg) => msg.isInbox)\r\n      .reduce((latest, msg) => {\r\n        const latestDate = new Date(latest.sentAt);\r\n        const msgDate = new Date(msg.sentAt);\r\n        return msgDate > latestDate ? msg : latest;\r\n      });\r\n  }\r\n\r\n  const lastGlobalMessage = getLastGlobalInboxMessage(globalMessages);\r\n\r\n  // console.log(\"lastGlobalMessage :\", lastGlobalMessage);\r\n\r\n  function handleClick() {\r\n    setIsSettingsVisible(!isSettingsVisible);\r\n  }\r\n  function toggleBlock() {\r\n    dispatch(toggleBlockUser({ chatId }));\r\n  }\r\n\r\n  function deletehat() {\r\n    dispatch(deleteUser({ chatId }));\r\n  }\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {adminChats?.length > 0 ? (\r\n        adminChats.map((chat) => (\r\n          <li key={chat.id}>\r\n            <NavLink\r\n              to={`/home/chat/${chat.id}`}\r\n              className={({ isActive }) =>\r\n                clsx(styles.listItem, {\r\n                  [styles.active]: isActive,\r\n                  [styles.youAreBlocked]: chat?.user?.youAreBlocked,\r\n                })\r\n              }\r\n              onClick={() => {\r\n                dispatch(accessChat({ chatId: chat.id }));\r\n                dispatch(markChatAsRead({ chatId }));\r\n              }}>\r\n              <div className={styles.imgCont}>\r\n                <img\r\n                  key={\"admin\"}\r\n                  className={styles.userImg}\r\n                  src={gaby}\r\n                  alt=\"Admin img\"\r\n                  loading=\"lazy\"\r\n                />\r\n                <div\r\n                  className={clsx(\r\n                    styles.isOnline,\r\n                    chat?.user?.isOnline ? styles.online : styles.notOnline\r\n                  )}></div>\r\n              </div>\r\n              <div className={styles.infoCont}>\r\n                <p className={styles.name}>{chat?.user?.name}</p>\r\n                <p\r\n                  className={clsx(\r\n                    styles.lastMessage,\r\n                    getLastInboxMessage(chat)?.isRead === false &&\r\n                      styles.notRead\r\n                  )}>\r\n                  {getLastInboxMessage(chat)?.content || \"No messages yet\"}\r\n                </p>\r\n              </div>\r\n              {chat?.id !== \"admin\" && chat?.id !== \"global\" && (\r\n                <div className={styles.settingsCont}>\r\n                  <button\r\n                    onClick={handleClick}\r\n                    type=\"button\"\r\n                    className={styles.btnCont}>\r\n                    <FaCog\r\n                      size={isMobile ? 12 : 18}\r\n                      color=\"#161616cc\"\r\n                      className={styles.cogIcon}\r\n                    />\r\n                  </button>\r\n                  {isSettingsVisible && chat?.id === chatId && (\r\n                    <div\r\n                      ref={modalRef}\r\n                      className={clsx(\r\n                        styles.modalCont,\r\n                        theme === \"dark\" && styles.modalContDark,\r\n                        theme === \"violet\" && styles.modalContViolet\r\n                      )}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className={clsx(\r\n                          styles.modalBtn,\r\n                          chat?.user?.isBlocked\r\n                            ? styles.modalBtnB\r\n                            : styles.modalBtnNb\r\n                        )}\r\n                        onClick={toggleBlock}>\r\n                        {chat?.user?.isBlocked ? `Unblock...🔓` : `Block...🚫`}\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className={clsx(\r\n                          styles.modalBtn,\r\n                          theme !== \"light\" && styles.modalBtnNotLight\r\n                        )}\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          e.preventDefault();\r\n                          deletehat();\r\n                          navigate(\"/home/chat\");\r\n                        }}>\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {chat?.user?.youAreBlocked && (\r\n                <span className={styles.youAreBlockedSpan}>🚫</span>\r\n              )}\r\n              {chat?.user?.isBlocked && (\r\n                <span className={styles.isBlockedSpan}>🚫</span>\r\n              )}\r\n            </NavLink>\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li className={styles.empty}>No chats found</li>\r\n      )}\r\n      <li key={\"global\"}>\r\n        <NavLink\r\n          to={\"/home/chat/global\"}\r\n          className={({ isActive }) =>\r\n            clsx(styles.listItem, styles.globalLink, {\r\n              [styles.active]: isActive,\r\n            })\r\n          }\r\n          onClick={() => {\r\n            dispatch(markGlobalChatAsRead({ chatId }));\r\n          }}>\r\n          <div className={styles.imgCont}>\r\n            <img\r\n              className={clsx(styles.userImg, styles.global)}\r\n              src={glob}\r\n              alt=\"User Global img\"\r\n              loading=\"lazy\"\r\n            />\r\n            <div className={clsx(styles.isOnline, styles.online)}></div>\r\n          </div>\r\n          <div className={styles.infoCont}>\r\n            <p className={styles.name}>Global</p>\r\n            <p\r\n              className={clsx(\r\n                styles.lastMessage,\r\n                !lastGlobalMessage?.isRead && styles.notRead\r\n              )}>\r\n              {lastGlobalMessage.content || \"No messages yet\"}\r\n            </p>\r\n          </div>\r\n\r\n          {globalChats.user?.youAreBlocked && (\r\n            <span className={styles.youAreBlockedSpan}>🚫</span>\r\n          )}\r\n        </NavLink>\r\n      </li>\r\n      {filteredChats?.length > 0 ? (\r\n        filteredChats.map((chat) => (\r\n          <li key={chat.id}>\r\n            <NavLink\r\n              to={`/home/chat/${chat.id}`}\r\n              className={({ isActive }) =>\r\n                clsx(styles.listItem, {\r\n                  [styles.active]: isActive,\r\n                  [styles.isBlocked]: chat?.user?.isBlocked,\r\n                  [styles.youAreBlocked]: chat?.user?.youAreBlocked,\r\n                })\r\n              }\r\n              onClick={() => {\r\n                dispatch(accessChat({ chatId: chat.id }));\r\n                dispatch(markChatAsRead({ chatId }));\r\n              }}>\r\n              <div className={styles.imgCont}>\r\n                <img\r\n                  key={reloadMap[chat.id] || 0}\r\n                  className={styles.userImg}\r\n                  src={chat.id === \"admin\" ? gaby : chat?.user?.avatar ?? roby}\r\n                  alt=\"User img\"\r\n                  loading=\"lazy\"\r\n                  onError={() => handleImageError(chat.id)}\r\n                />\r\n                <div\r\n                  className={clsx(\r\n                    styles.isOnline,\r\n                    chat?.user?.isOnline ? styles.online : styles.notOnline\r\n                  )}></div>\r\n              </div>\r\n              <div className={styles.infoCont}>\r\n                <p className={styles.name}>{chat?.user?.name}</p>\r\n                <p\r\n                  className={clsx(\r\n                    styles.lastMessage,\r\n                    getLastInboxMessage(chat)?.isRead === false &&\r\n                      styles.notRead\r\n                  )}>\r\n                  {getLastInboxMessage(chat)?.content || \"No messages yet\"}\r\n                </p>\r\n              </div>\r\n              {chat?.id !== \"admin\" && chat?.id !== \"global\" && (\r\n                <div className={styles.settingsCont}>\r\n                  <button\r\n                    onClick={handleClick}\r\n                    type=\"button\"\r\n                    className={styles.btnCont}>\r\n                    <FaCog\r\n                      size={isMobile ? 12 : 18}\r\n                      color=\"#161616cc\"\r\n                      className={styles.cogIcon}\r\n                    />\r\n                  </button>\r\n                  {isSettingsVisible && chat?.id === chatId && (\r\n                    <div\r\n                      ref={modalRef}\r\n                      className={clsx(\r\n                        styles.modalCont,\r\n                        theme === \"dark\" && styles.modalContDark,\r\n                        theme === \"violet\" && styles.modalContViolet\r\n                      )}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className={clsx(\r\n                          styles.modalBtn,\r\n                          chat?.user?.isBlocked\r\n                            ? styles.modalBtnB\r\n                            : styles.modalBtnNb\r\n                        )}\r\n                        onClick={toggleBlock}>\r\n                        {chat?.user?.isBlocked ? `Unblock...🔓` : `Block...🚫`}\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className={clsx(\r\n                          styles.modalBtn,\r\n                          theme !== \"light\" && styles.modalBtnNotLight\r\n                        )}\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          e.preventDefault();\r\n                          deletehat();\r\n                          navigate(\"/home/chat\");\r\n                        }}>\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {chat?.user?.youAreBlocked && (\r\n                <span className={styles.youAreBlockedSpan}>🚫</span>\r\n              )}\r\n              {chat?.user?.isBlocked && (\r\n                <span className={styles.isBlockedSpan}>🚫</span>\r\n              )}\r\n            </NavLink>\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li className={styles.empty}>No chats found</li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nChatsList.propTypes = {\r\n  search: PropTypes.string,\r\n  theme: PropTypes.string,\r\n};\r\n","import ChatsList from \"./ChatsList\";\r\n\r\nexport default ChatsList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"ChatInput_inputContainer__Dio7V\",\"input\":\"ChatInput_input__OKOss\",\"inputCenter\":\"ChatInput_inputCenter__ylU6J\",\"inputInfo\":\"ChatInput_inputInfo__YDM5R\",\"autoResizeTextarea\":\"ChatInput_autoResizeTextarea__v1k5c\"};","import ChatInput from \"./ChatInput\";\r\n\r\nexport default ChatInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./ChatInput.module.css\";\r\n\r\nexport default function ChatInput({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n  children,\r\n  textarea = false,\r\n}) {\r\n  const commonProps = {\r\n    autoComplete: autoComplete || \"off\",\r\n    style: { paddingLeft: paddingLeft || \"0px\" },\r\n    onChange: handleChange,\r\n    name: name || \"\",\r\n    className: clsx(styles.input, className),\r\n    placeholder: placeholder || \"\",\r\n    required: required || false,\r\n    value: value || \"\",\r\n    onBlur: handleBlur,\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      {textarea ? (\r\n        <textarea\r\n          {...commonProps}\r\n          rows=\"1\"\r\n          //   onInput={(e) => {\r\n          //     handleChange && handleChange(e);\r\n          //   }}\r\n          className={clsx(styles.input, className)} // adaugi o clasă\r\n        />\r\n      ) : (\r\n        <input\r\n          className={clsx(styles.input, className)}\r\n          {...commonProps}\r\n          type={type || \"text\"}\r\n        />\r\n      )}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nChatInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleBlur: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  textarea: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  children: PropTypes.node,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"aside\":\"ChatsAside_aside__GSkqe\",\"asideContent\":\"ChatsAside_asideContent__DQBIs\",\"asideNewMesgBtn\":\"ChatsAside_asideNewMesgBtn__RoQer\",\"newMsgCont\":\"ChatsAside_newMsgCont__o5C4x\",\"listCont\":\"ChatsAside_listCont__m6wYY\",\"list\":\"ChatsAside_list__kNelU\",\"closeButton\":\"ChatsAside_closeButton__7mzIO\",\"listItem\":\"ChatsAside_listItem__rM647\",\"isBlocked\":\"ChatsAside_isBlocked__Mc4lQ\",\"youAreBlocked\":\"ChatsAside_youAreBlocked__lgZmZ\",\"imgCont\":\"ChatsAside_imgCont__hqjeX\",\"userImg\":\"ChatsAside_userImg__Qyqle\",\"isOnline\":\"ChatsAside_isOnline__RKD21\",\"online\":\"ChatsAside_online__8elmH\",\"notOnline\":\"ChatsAside_notOnline__Tu3w3\",\"infoCont\":\"ChatsAside_infoCont__ogDpi\",\"name\":\"ChatsAside_name__fOC95\",\"lastMessage\":\"ChatsAside_lastMessage__r08XJ\",\"notRead\":\"ChatsAside_notRead__GPIkF\",\"youAreBlockedSpan\":\"ChatsAside_youAreBlockedSpan__evbE5\",\"asideInput\":\"ChatsAside_asideInput__NwS97\",\"asideInputButton\":\"ChatsAside_asideInputButton__2Cbyf\",\"asideInputSearchIcon\":\"ChatsAside_asideInputSearchIcon__UNoxz\",\"asideChatListCont\":\"ChatsAside_asideChatListCont__JSHcj\"};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useChats } from \"../../hooks/useChats\";\r\nimport { accessChat, markChatAsRead } from \"../../redux/public/chatsSlice\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport ChatsList from \"../ChatsList\";\r\nimport ChatInput from \"../commonComponents/ChatInput\";\r\n\r\nimport safeToDate from \"../../utils/safeToDate\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FaEnvelope } from \"react-icons/fa\";\r\n\r\nimport roby from \"../../images/Roby.jpg\";\r\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\r\n\r\nimport styles from \"./ChatsAside.module.css\";\r\n\r\nexport default function ChatsAside({ isBlocked, theme }) {\r\n  const { chats } = useChats();\r\n\r\n  const noReadRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isNoReadVisible, setIsNoReadVisible] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [reloadMap, setReloadMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (noReadRef.current && !noReadRef.current.contains(event.target)) {\r\n        setIsNoReadVisible(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [noReadRef]);\r\n\r\n  const notReadMessagesChats = [...chats]?.filter((chat) => {\r\n    return chat?.messages?.find(\r\n      (msg) => msg.isInbox === true && msg.isRead === false\r\n    );\r\n  });\r\n\r\n  // console.log(\"notReadMessagesChats :\", notReadMessagesChats);\r\n\r\n  function getLastInboxMessage(chat) {\r\n    const inboxMessages = chat?.messages.filter((m) => m?.isInbox) || {};\r\n\r\n    return inboxMessages.reduce((latest, msg) => {\r\n      return new Date(safeToDate(latest?.sentAt)) >\r\n        new Date(safeToDate(msg?.sentAt))\r\n        ? latest\r\n        : msg;\r\n    });\r\n  }\r\n\r\n  const handleImageError = (chatId) => {\r\n    setTimeout(() => {\r\n      setReloadMap((prev) => ({\r\n        ...prev,\r\n        [chatId]: (prev[chatId] || 0) + 1,\r\n      }));\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <aside className={styles.aside}>\r\n      <div className={styles.asideContent}>\r\n        {notReadMessagesChats.length > 0 && (\r\n          <div ref={noReadRef} className={styles.newMsgCont}>\r\n            <button\r\n              className={styles.asideNewMesgBtn}\r\n              onClick={() => setIsNoReadVisible(!isNoReadVisible)}>\r\n              New...\r\n              <FaEnvelope className={styles.newMsgSvg} />\r\n            </button>\r\n            {isNoReadVisible && (\r\n              <div className={styles.listCont}>\r\n                <button\r\n                  className={styles.closeButton}\r\n                  onClick={() => setIsNoReadVisible(false)}\r\n                  type=\"button\">\r\n                  X\r\n                </button>\r\n                <ul className={styles.list}>\r\n                  {notReadMessagesChats.map((chat) => {\r\n                    return (\r\n                      <li key={chat?.id}>\r\n                        <NavLink\r\n                          to={`/home/chat/${chat?.id}`}\r\n                          className={clsx(\r\n                            styles.listItem,\r\n                            chat?.user?.isBlocked && styles.isBlocked,\r\n                            chat?.user?.youAreBlocked && styles.youAreBlocked\r\n                          )}\r\n                          onClick={() => {\r\n                            setIsNoReadVisible(false);\r\n                            dispatch(accessChat({ chatId: chat?.id }));\r\n                            dispatch(markChatAsRead({ chatId: chat?.id }));\r\n                          }}>\r\n                          <div className={styles.imgCont}>\r\n                            <img\r\n                              key={reloadMap[chat.id] || 0}\r\n                              className={styles.userImg}\r\n                              src={\r\n                                chat.id === \"admin\"\r\n                                  ? gaby\r\n                                  : chat?.user?.avatar ?? roby\r\n                              }\r\n                              alt=\"User img\"\r\n                              loading=\"lazy\"\r\n                              onError={() => handleImageError(chat.id)}\r\n                            />\r\n                            <div\r\n                              className={clsx(\r\n                                styles.isOnline,\r\n                                chat?.user?.isOnline\r\n                                  ? styles.online\r\n                                  : styles.notOnline\r\n                              )}></div>\r\n                          </div>\r\n                          <div className={styles.infoCont}>\r\n                            <p className={styles.name}>{chat?.user?.name}</p>\r\n                            <p\r\n                              className={clsx(\r\n                                styles.lastMessage,\r\n                                styles.notRead\r\n                              )}>\r\n                              {getLastInboxMessage(chat)?.content ||\r\n                                \"No messages yet\"}\r\n                            </p>\r\n                          </div>\r\n                          {chat?.user?.youAreBlocked && (\r\n                            <span className={styles.youAreBlockedSpan}>🚫</span>\r\n                          )}\r\n                        </NavLink>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <ChatInput\r\n          className={styles.asideInput}\r\n          paddingLeft={\"18px\"}\r\n          placeholder={\"Search...\"}\r\n          value={search}\r\n          handleChange={(e) => setSearch(e.target.value)}>\r\n          <button className={styles.asideInputButton}>\r\n            <FontAwesomeIcon\r\n              className={styles.asideInputSearchIcon}\r\n              icon={faMagnifyingGlass}\r\n            />\r\n          </button>\r\n        </ChatInput>\r\n        <div className={styles.asideChatListCont}>\r\n          <ChatsList theme={theme} search={search} />\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nChatsAside.propTypes = {\r\n  isBlocked: PropTypes.bool,\r\n  theme: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chatList\":\"ActiveChatModal_chatList__hcI2m\",\"closeButton\":\"ActiveChatModal_closeButton__TLNlh\",\"noActive\":\"ActiveChatModal_noActive__czktq\",\"chatListItem\":\"ActiveChatModal_chatListItem__PYA2N\",\"avatar\":\"ActiveChatModal_avatar__dXJJk\",\"usersInfo\":\"ActiveChatModal_usersInfo__4JxRz\",\"userName\":\"ActiveChatModal_userName__TLoRt\",\"reply\":\"ActiveChatModal_reply__gusqt\"};","import React, { useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useChats } from \"../../hooks/useChats\";\r\n\r\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\r\nimport glob from \"../../images/global.png\";\r\n\r\nimport styles from \"./ActiveChatModal.module.css\";\r\n\r\nexport default function ActiveChatModal({ chats, closeModal }) {\r\n  const modalRef = useRef();\r\n  const { visitedChatIds } = useChats();\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n        closeModal();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [closeModal]);\r\n\r\n  const activeChats = chats.filter((chat) => visitedChatIds.includes(chat.id));\r\n\r\n  return (\r\n    <div ref={modalRef}>\r\n      <ul className={styles.chatList}>\r\n        <button\r\n          className={styles.closeButton}\r\n          onClick={closeModal}\r\n          type=\"button\">\r\n          X\r\n        </button>\r\n        <li key={\"globalH\"} className={styles.chatListItem}>\r\n          <Link to={`/home/chat/global`} onClick={closeModal}>\r\n            <img\r\n              src={glob}\r\n              alt=\"Avatar\"\r\n              className={styles.avatar}\r\n              loading=\"lazy\"\r\n            />\r\n            <div className={styles.usersInfo}>\r\n              <span className={styles.userName}>Global</span>\r\n              <span className={styles.reply}>Reply...</span>\r\n            </div>\r\n          </Link>\r\n        </li>\r\n        {activeChats.map((chat) =>\r\n          chat?.id !== \"global\" ? (\r\n            <li key={chat.id} className={styles.chatListItem}>\r\n              <Link to={`/home/chat/${chat.id}`} onClick={closeModal}>\r\n                <img\r\n                  src={chat.id === \"admin\" ? gaby : chat?.user?.avatar}\r\n                  alt=\"Avatar\"\r\n                  className={styles.avatar}\r\n                  loading=\"lazy\"\r\n                />\r\n                <div className={styles.usersInfo}>\r\n                  <span className={styles.userName}>{chat?.user?.name}</span>\r\n                  <span className={styles.reply}>Reply...</span>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          ) : null\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nActiveChatModal.propTypes = {\r\n  chats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        avatar: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    })\r\n  ).isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"ChatHeader_header__8hzgN\",\"asideHeader\":\"ChatHeader_asideHeader__m+Ghc\",\"asideHeaderTitle\":\"ChatHeader_asideHeaderTitle__-WHbJ\",\"asideHeaderCounter\":\"ChatHeader_asideHeaderCounter__pihhK\",\"chatHeaderRight\":\"ChatHeader_chatHeaderRight__NXGAd\",\"leftCont\":\"ChatHeader_leftCont__gS+Id\",\"chatInfo\":\"ChatHeader_chatInfo__rl-wa\",\"avatar\":\"ChatHeader_avatar__jyAaV\",\"usersInfo\":\"ChatHeader_usersInfo__vlq0e\",\"userName\":\"ChatHeader_userName__Cbf5v\",\"noLight\":\"ChatHeader_noLight__POBBM\",\"reply\":\"ChatHeader_reply__Vt64d\",\"rightContButton\":\"ChatHeader_rightContButton__-59aM\",\"button\":\"ChatHeader_button__et2hb\"};","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useChats } from \"../../hooks/useChats\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport ActiveChatModal from \"../ActiveChatModal/ActiveChatModal\";\r\n\r\nimport { FaEllipsisH } from \"react-icons/fa\";\r\n\r\nimport gaby from \"../../images/teamMembersPhoto/Roby.jpg\";\r\nimport glob from \"../../images/global.png\";\r\n\r\nimport styles from \"./ChatHeader.module.css\";\r\n\r\nfunction ChatHeader({ theme }) {\r\n  const { chatId } = useParams();\r\n  const { activeChats, chats } = useChats();\r\n  const selectedChat = chats.find((chat) => chat.id === chatId);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => setShowModal((prev) => !prev);\r\n\r\n  return (\r\n    <div className={clsx(styles.header)}>\r\n      <div className={styles.asideHeader}>\r\n        <p\r\n          className={clsx(\r\n            styles.asideHeaderTitle,\r\n            theme !== \"light\" && styles.noLight\r\n          )}>\r\n          Active\r\n        </p>\r\n        <div className={styles.asideHeaderCounter}>{activeChats}</div>\r\n      </div>\r\n      <div className={styles.chatHeaderRight}>\r\n        {showModal && (\r\n          <ActiveChatModal chats={chats} closeModal={toggleModal} />\r\n        )}\r\n        {selectedChat ? (\r\n          <div className={styles.chatInfo}>\r\n            <img\r\n              src={\r\n                selectedChat.id === \"admin\"\r\n                  ? gaby\r\n                  : selectedChat.id === \"global\"\r\n                  ? glob\r\n                  : selectedChat.user.avatar\r\n              }\r\n              alt=\"Avatar\"\r\n              className={styles.avatar}\r\n            />\r\n            <div className={styles.usersInfo}>\r\n              <span\r\n                className={clsx(\r\n                  styles.userName,\r\n                  theme !== \"light\" && styles.noLight\r\n                )}>\r\n                {selectedChat?.user?.name}\r\n              </span>\r\n              <span className={styles.reply}>Reply</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={styles.chatInfo}>\r\n            <img src={glob} alt=\"Avatar\" className={styles.avatar} />\r\n            <div className={styles.usersInfo}>\r\n              <span\r\n                className={clsx(\r\n                  styles.userName,\r\n                  theme !== \"light\" && styles.noLight\r\n                )}>\r\n                Global\r\n              </span>\r\n              <span className={styles.reply}>Reply</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <button className={clsx(styles.rightContButton)} onClick={toggleModal}>\r\n          <FaEllipsisH size={16} className={styles.button} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n\r\nChatHeader.propTypes = {\r\n  theme: PropTypes.string,\r\n};\r\n","import ChatHeader from \"./ChatHeader\";\r\n\r\nexport default ChatHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"ChatPage_cont__QpD6A\",\"lightCont\":\"ChatPage_lightCont__Y6Rn2\",\"darkCont\":\"ChatPage_darkCont__sHvhS\",\"violetCont\":\"ChatPage_violetCont__ih5gN\",\"content\":\"ChatPage_content__OKBkp\",\"main\":\"ChatPage_main__mBvHu\",\"sendMsgCont\":\"ChatPage_sendMsgCont__Z0Vnr\",\"sendMsgInput\":\"ChatPage_sendMsgInput__1ItuK\",\"writeMsgButton\":\"ChatPage_writeMsgButton__KpWwN\",\"paperClipIcon\":\"ChatPage_paperClipIcon__JCakf\",\"emojiWrapper\":\"ChatPage_emojiWrapper__+R1SK\",\"smileIcon\":\"ChatPage_smileIcon__D7I1A\",\"emojiPicker\":\"ChatPage_emojiPicker__66oc7\",\"sendButtonCont\":\"ChatPage_sendButtonCont__ymqy8\",\"sendMsgButton\":\"ChatPage_sendMsgButton__W9crT\",\"sendBlocked\":\"ChatPage_sendBlocked__OqsVB\",\"sendIcon\":\"ChatPage_sendIcon__udfGq\",\"emojiPickerWrapper\":\"ChatPage_emojiPickerWrapper__KQsY3\",\"blockSpan\":\"ChatPage_blockSpan__8HFBZ\"};","import ChatPage from \"./ChatPage\";\r\n\r\nexport default ChatPage;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  accessChat,\r\n  markGlobalChatAsRead,\r\n  updateChat,\r\n} from \"../../redux/public/chatsSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useChats } from \"../../hooks/useChats\";\r\n\r\nimport ChatsAside from \"../../components/ChatsAside/ChatsAside\";\r\nimport ChatHeader from \"../../components/ChatHeader\";\r\nimport ChatInput from \"../../components/commonComponents/ChatInput\";\r\n\r\nimport { FaPaperclip, FaRegSmile, FaPaperPlane } from \"react-icons/fa\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\n\r\nimport styles from \"./ChatPage.module.css\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nexport default function ChatPage() {\r\n  const { user } = useAuth();\r\n  const theme = user.theme || \"light\";\r\n\r\n  const { chats } = useChats();\r\n\r\n  const { chatId } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const fileInputRef = useRef();\r\n  const blockRef = useRef(null);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [showBlockMsg, setShowBlockMsg] = useState(false);\r\n  const [showYouAreBlockMsg, setShowYouAreBlockMsg] = useState(false);\r\n\r\n  const userChat = chats.find((u) => u.id === chatId);\r\n\r\n  const handleSendMsg = () => {\r\n    if (!message.trim()) return;\r\n\r\n    dispatch(\r\n      updateChat({\r\n        chatId,\r\n        newMessages: [\r\n          {\r\n            id: crypto.randomUUID(),\r\n            content: message,\r\n            isInbox: false,\r\n            sentAt: new Date().toISOString(),\r\n          },\r\n        ],\r\n      })\r\n    );\r\n    setMessage(\"\");\r\n    setShowEmojiPicker(false);\r\n    setFile(null);\r\n  };\r\n\r\n  const handleAttachClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatId) {\r\n      dispatch(accessChat({ chatId }));\r\n    }\r\n  }, [chatId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (chatId === \"global\") {\r\n      dispatch(markGlobalChatAsRead({ chatId }));\r\n    }\r\n  }, [chatId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!chatId) {\r\n      navigate(\"/home/chat/global\");\r\n    }\r\n  }, [navigate, chatId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (blockRef.current && !blockRef.current.contains(event.target)) {\r\n        setShowBlockMsg(false);\r\n        setShowYouAreBlockMsg(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [blockRef]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n    }\r\n  };\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker((prev) => !prev);\r\n  };\r\n\r\n  const handleEmojiClick = (emojiData) => {\r\n    setMessage((prev) => prev + emojiData.emoji);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.cont,\r\n        theme === \"light\"\r\n          ? styles.lightCont\r\n          : theme === \"violet\"\r\n          ? styles.violetCont\r\n          : styles.darkCont\r\n      )}>\r\n      <ChatHeader theme={theme} />\r\n      <div className={clsx(styles.content)}>\r\n        <ChatsAside\r\n          isBlocked={\r\n            userChat?.userChat?.isBlocked || userChat?.userChat?.youAreBlocked\r\n          }\r\n          theme={theme}\r\n        />\r\n        <section className={styles.main}>\r\n          <Outlet context={{ file }} />\r\n        </section>\r\n      </div>\r\n      <div className={styles.sendMsgCont}>\r\n        <ChatInput\r\n          type=\"textarea\"\r\n          textarea\r\n          width=\"100%\"\r\n          className={styles.sendMsgInput}\r\n          paddingLeft=\"5px\"\r\n          placeholder=\"Type here...\"\r\n          value={message}\r\n          handleChange={(e) => setMessage(e.target.value)}>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.writeMsgButton}\r\n            onClick={handleAttachClick}>\r\n            <FaPaperclip className={styles.paperClipIcon} size={16} />\r\n          </button>\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            style={{ display: \"none\" }}\r\n          />\r\n\r\n          <div className={styles.emojiWrapper}>\r\n            <button\r\n              type=\"button\"\r\n              className={styles.writeMsgButton}\r\n              onClick={toggleEmojiPicker}>\r\n              <FaRegSmile className={styles.smileIcon} size={16} />\r\n            </button>\r\n            {showEmojiPicker && (\r\n              <div className={styles.emojiPicker}>\r\n                <EmojiPicker\r\n                  onEmojiClick={handleEmojiClick}\r\n                  width={250}\r\n                  height={300}\r\n                  previewConfig={{ showPreview: false }}\r\n                  searchPlaceHolder=\"Search emoji...\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </ChatInput>\r\n\r\n        <div ref={blockRef} className={styles.sendButtonCont}>\r\n          {userChat?.userChat?.isBlocked &&\r\n            !userChat?.userChat?.youAreBlocked &&\r\n            showBlockMsg && (\r\n              <p className={styles.blockSpan}>\r\n                🚫 You have blocked <b>{userChat?.userChat?.name} !</b> Find\r\n                them in <b>Chats List → Settings</b> and unblock to send\r\n                messages.\r\n              </p>\r\n            )}\r\n          {chatId !== \"global\" &&\r\n            userChat?.userChat?.youAreBlocked &&\r\n            showYouAreBlockMsg && (\r\n              <p className={styles.blockSpan}>\r\n                🚫 You are blocked by <b>{userChat?.userChat?.name} !</b>\r\n                You cannot send messages to them.\r\n              </p>\r\n            )}\r\n          {chatId === \"global\" && showYouAreBlockMsg && (\r\n            <p className={styles.blockSpan}>\r\n              🚫 You are blocked by <b>Admin !</b>\r\n              You cannot send messages to <b>Global !</b> Please, contact{\" \"}\r\n              <b>Admin</b> for more info...!\r\n            </p>\r\n          )}\r\n          <button\r\n            type=\"button\"\r\n            className={clsx(\r\n              styles.sendMsgButton,\r\n              (userChat?.userChat?.isBlocked ||\r\n                userChat?.userChat?.youAreBlocked) &&\r\n                styles.sendBlocked\r\n            )}\r\n            onClick={() => {\r\n              !userChat?.userChat?.isBlocked &&\r\n                !userChat?.userChat?.youAreBlocked &&\r\n                handleSendMsg();\r\n              if (\r\n                userChat?.userChat?.isBlocked &&\r\n                !userChat?.userChat?.youAreBlocked\r\n              ) {\r\n                setShowBlockMsg(!showBlockMsg);\r\n                setShowYouAreBlockMsg(false);\r\n              }\r\n              if (userChat?.userChat?.youAreBlocked) {\r\n                setShowYouAreBlockMsg(!showYouAreBlockMsg);\r\n                setShowBlockMsg(false);\r\n              }\r\n            }}>\r\n            <FaPaperPlane className={styles.sendIcon} size={18} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["selectChatsState","state","chats","selectActiveChats","createSelector","chatsState","activeChats","selectChats","selectLoading","loading","selectError","error","selectVisitedChatIds","visitedChatIds","chatByIdSelectorCache","selectChatById","chatId","find","chat","id","useChats","dispatch","useDispatch","useSelector","isLoading","errorChats","chatById","safeToDate","ts","d1","Date","isNaN","getTime","fixed","replace","_","hh","mm","ss","ms","arguments","length","undefined","Math","min","Number","toString","padStart","padEnd","d2","d3","parse","breakpoints","_ref","_globalChats$users","_globalChats$user","search","theme","useParams","navigate","useNavigate","modalRef","useRef","reloadMap","setReloadMap","useState","isSettingsVisible","setIsSettingsVisible","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","markChatAsRead","isMobile","useMediaQuery","query","getLastInboxMessage","_chat$messages","inboxMessages","messages","filter","m","isInbox","reduce","latest","msg","dateMsg","sentAt","dateLatest","filteredChats","_chat$user","_chat$user$name","user","name","toLowerCase","includes","adminChats","globalChats","globalMessages","users","forEach","us","_us$messages","userInfo","userId","push","lastGlobalMessage","latestDate","getLastGlobalInboxMessage","handleClick","toggleBlock","toggleBlockUser","deletehat","deleteUser","_jsxs","className","styles","list","children","map","_chat$user3","_chat$user4","_getLastInboxMessage","_getLastInboxMessage2","_chat$user5","_chat$user6","_chat$user7","_chat$user8","_jsx","NavLink","to","_ref2","_chat$user2","isActive","clsx","listItem","active","youAreBlocked","onClick","accessChat","imgCont","userImg","src","gaby","alt","isOnline","online","notOnline","infoCont","lastMessage","isRead","notRead","content","settingsCont","type","btnCont","FaCog","size","color","cogIcon","ref","modalCont","modalContDark","modalContViolet","modalBtn","isBlocked","modalBtnB","modalBtnNb","modalBtnNotLight","e","stopPropagation","preventDefault","youAreBlockedSpan","isBlockedSpan","empty","_ref3","globalLink","markGlobalChatAsRead","global","glob","_chat$user$avatar","_chat$user1","_chat$user10","_chat$user11","_getLastInboxMessage3","_getLastInboxMessage4","_chat$user12","_chat$user13","_chat$user14","_chat$user15","_ref4","_chat$user9","_chat$user0","avatar","roby","onError","setTimeout","prev","handleImageError","placeholder","required","handleChange","width","value","paddingLeft","autoComplete","handleBlur","textarea","commonProps","style","onChange","onBlur","rows","ChatsAside","noReadRef","isNoReadVisible","setIsNoReadVisible","setSearch","notReadMessagesChats","aside","asideContent","newMsgCont","asideNewMesgBtn","FaEnvelope","newMsgSvg","listCont","closeButton","ChatInput","asideInput","asideInputButton","FontAwesomeIcon","asideInputSearchIcon","icon","faMagnifyingGlass","asideChatListCont","ChatsList","ActiveChatModal","closeModal","Link","_selectedChat$user","selectedChat","showModal","setShowModal","toggleModal","FaEllipsisH","_userChat$userChat","_userChat$userChat2","_userChat$userChat3","_userChat$userChat4","_userChat$userChat5","_userChat$userChat6","_userChat$userChat7","_userChat$userChat8","_userChat$userChat9","useAuth","fileInputRef","blockRef","message","setMessage","showEmojiPicker","setShowEmojiPicker","file","setFile","showBlockMsg","setShowBlockMsg","showYouAreBlockMsg","setShowYouAreBlockMsg","userChat","u","ChatHeader","Outlet","context","handleAttachClick","click","FaPaperclip","selectedFile","files","display","toggleEmojiPicker","FaRegSmile","EmojiPicker","onEmojiClick","emojiData","emoji","height","previewConfig","showPreview","searchPlaceHolder","_userChat$userChat0","_userChat$userChat1","_userChat$userChat10","_userChat$userChat11","_userChat$userChat12","trim","updateChat","newMessages","crypto","randomUUID","toISOString","FaPaperPlane"],"sourceRoot":""}