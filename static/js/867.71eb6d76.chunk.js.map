{"version":3,"file":"static/js/867.71eb6d76.chunk.js","mappings":"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","sources":["hooks/useFormValidation.js","webpack://my-react-app/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/useToggle.js","hooks/validateLogin.js","webpack://my-react-app/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://my-react-app/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/index.js","pages/LoginPage/LoginPage.jsx","webpack://my-react-app/./src/components/commonComponents/Button/Button.module.css?4e57","components/commonComponents/Button/index.js","components/commonComponents/Button/Button.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useFormValidation = (initialState, validateFn) => {\r\n  const [fields, setFields] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateFields = () => {\r\n    const newErrors = validateFn(fields);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  return {\r\n    fields,\r\n    setFields,\r\n    errors,\r\n    validateFields,\r\n  };\r\n};\r\n\r\nexport default useFormValidation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__ovt5a\",\"inputCenter\":\"Input_inputCenter__8ObG8\",\"inputInfo\":\"Input_inputInfo__eUz4D\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n  handleClick,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        onClick={handleClick}\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleClick: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useFormTouched = (initialState = {}) => {\r\n  const [touched, setTouched] = useState(\r\n    Object.keys(initialState).reduce((acc, key) => {\r\n      acc[key] = false;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const handleBlur = (field) => () => {\r\n    setTouched((prev) => ({ ...prev, [field]: true }));\r\n  };\r\n\r\n  return {\r\n    touched,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useFormTouched;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue) {\r\n    const [isOpen, setIsOpen] = useState(initialValue);\r\n\r\n    function toggle() {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return [isOpen, toggle];\r\n}\r\n","const validateLogin = (fields) => {\r\n    const errors = {};\r\n    if (!fields.email) {\r\n        errors.email = \"Email is required\";\r\n    }\r\n    if (!fields.password) {\r\n        errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n};\r\n\r\nexport default validateLogin;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__J59Or\",\"cont\":\"LoginForm_cont__bLb50\",\"linkContainer\":\"LoginForm_linkContainer__Nyl4y\",\"navLinkTitle\":\"LoginForm_navLinkTitle__fFOln\",\"login\":\"LoginForm_login__ckoif\",\"inputsCont\":\"LoginForm_inputsCont__A4MSy\",\"inputContainer\":\"LoginForm_inputContainer__88HZK\",\"inputWrapper\":\"LoginForm_inputWrapper__Lu4KG\",\"input\":\"LoginForm_input__sbe9H\",\"inputError\":\"LoginForm_inputError__Dy8nB\",\"forgotPassword\":\"LoginForm_forgotPassword__EEuE3\",\"eyeIcon\":\"LoginForm_eyeIcon__r4CQb\",\"errorCont\":\"LoginForm_errorCont__BeUnI\",\"error\":\"LoginForm_error__a9AL3\",\"buttonsContainer\":\"LoginForm_buttonsContainer__BV0Oe\",\"button\":\"LoginForm_button__S4qn0\",\"navLink\":\"LoginForm_navLink__t525x\",\"choiceContainer\":\"LoginForm_choiceContainer__19xYt\",\"line\":\"LoginForm_line__1fY6X\",\"socialButtonCont\":\"LoginForm_socialButtonCont__SNd2n\",\"facebookButton\":\"LoginForm_facebookButton__k0Tmo\"};","import React, { useState } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport FacebookLogin from \"@greatsumini/react-facebook-login\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logIn, oAuthlLogInRegister } from \"../../redux/auth/operationsAuth\";\r\n\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\n\r\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\r\n\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport useFormValidation from \"../../hooks/useFormValidation\";\r\nimport validateLogin from \"../../hooks/validateLogin\";\r\nimport useFormTouched from \"../../hooks/useFormTouched\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport styles from \"./LoginForm.module.css\";\r\n\r\nfunction LoginForm() {\r\n  const { fields, setFields, validateFields } = useFormValidation(\r\n    { email: \"\", password: \"\" },\r\n    validateLogin\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n  const { user, isLoggedIn } = useAuth();\r\n  const { touched, handleBlur } = useFormTouched(fields);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [type, setType] = useState(\"password\");\r\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\r\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\r\n  const [forgotPassword, setForgotPassword] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateFields()) return;\r\n\r\n    try {\r\n      await dispatch(logIn(fields)).unwrap();\r\n      toast.success(\"Login successful!\", { position: \"top-center\" });\r\n    } catch (error) {\r\n      setErrorMessage(\"You have entered an invalid username or password.\");\r\n    }\r\n  };\r\n\r\n  const handleOAuthLogin = async (profile, provider, accessToken = null) => {\r\n    const userPayload = { profile, provider, accessToken };\r\n    try {\r\n      await dispatch(oAuthlLogInRegister(userPayload)).unwrap();\r\n      toast.success(\"Login successful!\", { position: \"top-center\" });\r\n    } catch (err) {\r\n      toast.error(`${provider} login failed`);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // callback FB common\r\n  const onFacebookResponse = (response) => {\r\n    console.log(\"FB raw response:\", response);\r\n\r\n    if (!response) {\r\n      toast.error(\"Facebook returned no response\");\r\n      return;\r\n    }\r\n\r\n    if (response.status === \"unknown\") {\r\n      toast.error(\"Facebook login failed or cancelled\");\r\n      return;\r\n    }\r\n\r\n    const accessToken =\r\n      response.accessToken || response.authResponse?.accessToken || null;\r\n    const id =\r\n      response.id || response.userID || response.authResponse?.userID || null;\r\n    const name = response.name || null;\r\n    const email = response.email || null;\r\n    const avatar = response.picture?.data?.url || null;\r\n\r\n    const profile = {\r\n      id,\r\n      name,\r\n      email,\r\n      avatar,\r\n    };\r\n\r\n    // handleOAuthLogin trebuie să accepte accessToken ca al treilea param\r\n    handleOAuthLogin(profile, \"facebook\", accessToken);\r\n  };\r\n\r\n  const isFormValid = fields.email.trim() !== \"\" && fields.password.length >= 6;\r\n\r\n  return (\r\n    <div className={styles.cont}>\r\n      <div className={styles.linkContainer}>\r\n        <Link to=\"/auth/register\" className={styles.navLinkTitle}>\r\n          Registration\r\n        </Link>\r\n        <p className={styles.login}>Log In</p>\r\n      </div>\r\n\r\n      <div className={styles.form}>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <div className={styles.inputsCont}>\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.inputWrapper}>\r\n                <Input\r\n                  className={styles.input}\r\n                  autoComplete=\"on\"\r\n                  paddingLeft=\"18px\"\r\n                  width=\"100%\"\r\n                  type=\"email\"\r\n                  value={fields.email}\r\n                  handleChange={(e) =>\r\n                    setFields({ ...fields, email: e.target.value })\r\n                  }\r\n                  handleBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Enter your email\"\r\n                  required\r\n                />\r\n              </div>\r\n              {touched.email && !fields.email && (\r\n                <p className={styles.inputError}>Required</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.inputWrapper}>\r\n                {eyeVisible && (\r\n                  <VscEye\r\n                    fill=\"var(--brand-color)\"\r\n                    onClick={() => {\r\n                      toggleEyeVisible();\r\n                      toggleClosedEyeVisible();\r\n                      setType(\"text\");\r\n                    }}\r\n                    size=\"24px\"\r\n                    className={styles.eyeIcon}\r\n                  />\r\n                )}\r\n                {closedEyeVisible && (\r\n                  <VscEyeClosed\r\n                    fill=\"#4885e0\"\r\n                    onClick={() => {\r\n                      toggleEyeVisible();\r\n                      toggleClosedEyeVisible();\r\n                      setType(\"password\");\r\n                    }}\r\n                    size=\"24px\"\r\n                    className={styles.eyeIcon}\r\n                  />\r\n                )}\r\n                <Input\r\n                  autoComplete=\"on\"\r\n                  paddingLeft=\"14px\"\r\n                  width=\"100%\"\r\n                  type={type}\r\n                  value={fields.password}\r\n                  handleChange={(e) =>\r\n                    setFields({ ...fields, password: e.target.value })\r\n                  }\r\n                  handleBlur={() => {\r\n                    handleBlur(\"password\");\r\n                    setForgotPassword(false);\r\n                  }}\r\n                  handleClick={() => setForgotPassword(true)}\r\n                  placeholder=\"Password\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              {forgotPassword && (\r\n                <button className={styles.forgotPassword} type=\"button\">\r\n                  Forgot password?\r\n                </button>\r\n              )}\r\n              {touched.password && fields.password.length < 6 && (\r\n                <p className={styles.inputError}>\r\n                  Password must be at least 6 characters!\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.buttonsContainer}>\r\n            {errorMessage && <p className={styles.error}>{errorMessage}</p>}\r\n            <Button disabled={!isFormValid} variant=\"auth\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n          </div>\r\n\r\n          {((user !== null && !isLoggedIn) || user?.verify === false) && (\r\n            <div className={styles.errorCont}>\r\n              <p className={styles.error}>\r\n                It seems that your authorisation token expired or your email is\r\n                not verified! Please click Login or Verify.\r\n              </p>\r\n              <Button\r\n                variant=\"auth\"\r\n                handleClick={() => navigate(\"/verify-email\")}>\r\n                Verify\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </form>\r\n\r\n        <p className={styles.choiceContainer}>\r\n          <span className={styles.line}></span>\r\n          <span>or</span>\r\n          <span className={styles.line}></span>\r\n        </p>\r\n\r\n        <div className={styles.socialButtonCont}>\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              background: \"royalblue\",\r\n              borderRadius: \"6px\",\r\n            }}>\r\n            <GoogleLogin\r\n              onSuccess={(credentialResponse) => {\r\n                const profile = jwtDecode(credentialResponse.credential);\r\n                handleOAuthLogin(\r\n                  {\r\n                    id: profile.sub,\r\n                    name: profile.name,\r\n                    email: profile.email,\r\n                    avatar: profile.picture,\r\n                  },\r\n                  \"google\"\r\n                );\r\n              }}\r\n              onError={() => toast.error(\"Google login failed\")}\r\n              size=\"large\"\r\n              shape=\"rectangular\"\r\n              theme=\"filled_blue\"\r\n              width=\"100%\" // doar ca fallback\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.socialButtonCont}>\r\n          <FacebookLogin\r\n            className={styles.facebookButton}\r\n            appId={process.env.REACT_APP_FACEBOOK_APP_ID}\r\n            autoLoad={false}\r\n            fields=\"name,email,picture\"\r\n            scope=\"email,public_profile\"\r\n            callback={onFacebookResponse}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LoginPage_section__vVWQR\",\"imageLeft\":\"LoginPage_imageLeft__GCqZ6\",\"imageRight\":\"LoginPage_imageRight__S1rQa\"};","import LoginPage from './LoginPage.jsx'\r\n\r\nexport default LoginPage","import React from \"react\";\r\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport leftImage from \"../../images/login-background-left-side.png\";\r\nimport rightImage from \"../../images/login-background-right-side.png\";\r\n\r\nimport styles from \"./LoginPage.module.css\";\r\n\r\nexport default function LoginPage() {\r\n  // Dependency array ensures the effect runs when these values change.\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <div className={styles.imageLeft}>\r\n        <img src={leftImage} alt=\"Left\" />\r\n      </div>\r\n      <div className={styles.imageRight}>\r\n        <img src={rightImage} alt=\"Right\" />\r\n      </div>\r\n      <LoginForm />\r\n    </section>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DQKMR\",\"violet\":\"Button_violet__AJ44T\"};","import Button from \"./Button\";\r\n\r\nexport default Button;\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nexport default function Button({\r\n  type,\r\n  children,\r\n  variant = \"\",\r\n  theme = \"light\",\r\n  handleClick,\r\n  disabled,\r\n  className,\r\n}) {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      onClick={handleClick}\r\n      type={type}\r\n      className={clsx(\r\n        styles.button,\r\n        variant === \"auth\"\r\n          ? styles.button\r\n          : variant === \"send\"\r\n          ? theme === \"violet\"\r\n            ? styles.violet\r\n            : styles.button\r\n          : null, // If no match, fallback to no additional styles\r\n        className // Allow additional custom classes\r\n      )}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  className: PropTypes.string,\r\n};\r\n"],"names":["useFormValidation","initialState","validateFn","fields","setFields","useState","errors","setErrors","validateFields","newErrors","Object","keys","length","Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","handleClick","_jsx","style","styles","inputContainer","children","onClick","onChange","clsx","input","inputCenter","onBlur","arguments","undefined","touched","setTouched","reduce","acc","key","field","prev","useToggle","initialValue","isOpen","setIsOpen","email","password","validateLogin","navigate","useNavigate","user","isLoggedIn","useAuth","useFormTouched","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","closedEyeVisible","toggleClosedEyeVisible","forgotPassword","setForgotPassword","handleOAuthLogin","async","profile","provider","userPayload","accessToken","oAuthlLogInRegister","unwrap","toast","success","position","err","error","console","isFormValid","trim","_jsxs","Link","to","onSubmit","e","preventDefault","logIn","target","VscEye","fill","size","VscEyeClosed","Button","disabled","verify","flex","display","justifyContent","background","borderRadius","GoogleLogin","onSuccess","credentialResponse","jwtDecode","credential","id","sub","avatar","picture","onError","shape","theme","FacebookLogin","appId","process","autoLoad","scope","callback","response","_response$authRespons","_response$authRespons2","_response$picture","_response$picture$dat","log","status","authResponse","userID","data","url","src","leftImage","alt","rightImage","LoginForm"],"sourceRoot":""}