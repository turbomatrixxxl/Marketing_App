{"version":3,"file":"static/js/77.27fbec7d.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/components/Chart/Chart.module.css?6073","components/Chart/Chart.jsx","webpack://my-react-app/./src/components/ThemeSelector/ThemeSelector.module.css?ae7a","components/ThemeSelector/ThemeSelector.jsx","webpack://my-react-app/./src/components/LanguageSelector/LanguageSelector.module.css?d034","components/LanguageSelector/LanguageSelector.jsx","webpack://my-react-app/./src/components/InputAdi/Input.module.css?b114","components/InputAdi/Input.jsx","webpack://my-react-app/./src/components/modal/UpdateUser/UpdateUser.module.css?4294","components/modal/UpdateUser/UpdateUser.jsx","webpack://my-react-app/./src/components/Header/Header.module.css?4e72","components/Header/Header.jsx","components/Header/index.js","webpack://my-react-app/./src/components/SharedLayout/SharedLayout.module.css?d5af","components/SharedLayout/SharedLayout.jsx","webpack://my-react-app/./src/components/commonComponents/Modal/Modal.module.css?ed0b","components/commonComponents/Modal/Modal.jsx","webpack://my-react-app/./src/components/LogoSection/LogoSection.module.css?353c","components/LogoSection/LogoSection.jsx","webpack://my-react-app/./src/components/BotStatusCard/BotStatusCard.module.css?a877","webpack://my-react-app/./src/components/commonComponents/Loader/LiveSelector/LiveSelector.module.css?85ab","components/commonComponents/Loader/LiveSelector/index.js","components/commonComponents/Loader/LiveSelector/LiveSelector.jsx","components/BotStatusCard/BotStatusCard.jsx","webpack://my-react-app/./src/components/BotsStatus/BotsStatus.module.css?afb0","components/BotsStatus/BotsStatus.jsx","webpack://my-react-app/./src/components/Sidebar/Sidebar.module.css?6ffa","components/Sidebar/index.js","components/Sidebar/Sidebar.jsx","webpack://my-react-app/./src/components/ParametersForm/ParametersForm.module.css?83ea","components/ParametersForm/ParametersForm.jsx","webpack://my-react-app/./src/components/SidebarRight/SidebarRight.module.css?4565","components/SidebarRight/SidebarRight.jsx","webpack://my-react-app/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","pages/HomePage/index.js","hooks/useToggle.js","webpack://my-react-app/./src/components/commonComponents/Button/Button.module.css?4e57","components/commonComponents/Button/index.js","components/commonComponents/Button/Button.jsx","webpack://my-react-app/./src/components/ModalFooter/ModalFooter.module.css?899e","webpack://my-react-app/./src/components/commonComponents/FooterLogo/FooterLogo.module.css?c643","components/commonComponents/FooterLogo/FooterLogo.jsx","webpack://my-react-app/./src/components/commonComponents/FormButton/FormButton.module.css?d01f","components/commonComponents/FormButton/FormButton.jsx","components/ModalFooter/ModalFooter.jsx","webpack://my-react-app/./src/components/Footer/Footer.module.css?bcd4","components/Footer/Footer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chartContainer\":\"Chart_chartContainer__6bMvK\",\"chartCont\":\"Chart_chartCont__yGNtp\",\"chartBalance\":\"Chart_chartBalance__ShJya\",\"light\":\"Chart_light__1cwbK\",\"violet\":\"Chart_violet__Z0h1P\",\"chart\":\"Chart_chart__e8LjG\",\"tooltipContainer\":\"Chart_tooltipContainer__uo8dx\",\"tooltipNameContainer\":\"Chart_tooltipNameContainer__VqnBe\",\"tooltipSumContainer\":\"Chart_tooltipSumContainer__FkYhz\"};","\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { PieChart, Pie, Tooltip, Cell, ResponsiveContainer } from \"recharts\";\r\nimport \"animate.css\";\r\n\r\n// import \"chart.js/auto\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nexport const balance = 1000.12;\r\n\r\nexport default function Chart() {\r\n  const theme = localStorage.getItem(\"theme\") || \"dark\";\r\n\r\n  const profit = 54.0;\r\n  const proc = 5.42;\r\n  const equity = 1030.18;\r\n  const free = 900.5;\r\n\r\n  //  data\r\n  const data = [\r\n    profit > 0 && {\r\n      name: \"Day Profit\",\r\n      value: profit,\r\n      backgroundColor: \"#37e673\",\r\n      borderWidth: 0,\r\n      hoverOffset: 5,\r\n    },\r\n    equity > 0 && {\r\n      name: \"Equity\",\r\n      value: equity,\r\n      backgroundColor: \"#ea3c53\",\r\n      borderWidth: 0,\r\n      hoverOffset: 5,\r\n    },\r\n    free > 0 && {\r\n      name: \"Free\",\r\n      value: free,\r\n      backgroundColor: \"#7000ff\",\r\n      borderWidth: 0,\r\n      hoverOffset: 5,\r\n    },\r\n    {\r\n      name: \"There are no transactions for this period !\",\r\n      value: 0.0000000001,\r\n      backgroundColor: \"rgba(255, 255, 255, 0.6)\",\r\n      borderWidth: 0,\r\n      hoverOffset: 5,\r\n    },\r\n  ];\r\n\r\n  const sortedData = data.sort((a, b) => {\r\n    let ap = Number(a.value);\r\n    // console.log(ap);\r\n\r\n    let bp = Number(b.value);\r\n    // console.log(b);\r\n\r\n    return ap - bp;\r\n  });\r\n\r\n  //   console.log(sortedData);\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n      //   console.log(payload[0].payload.fill);\r\n\r\n      return (\r\n        <div\r\n          className={clsx(\r\n            styles.tooltipContainer,\r\n            theme === \"violet\" && styles.violet\r\n          )}>\r\n          <p className={styles.tooltipNameContainer}>{`${payload[0].name}`}</p>\r\n          <div className={styles.tooltipSumContainer}>\r\n            <div\r\n              style={{\r\n                background: `${payload[0].payload.fill}`,\r\n                borderRadius: \"2.5px\",\r\n              }}></div>\r\n            <span>{Number(payload[0].value).toFixed(2)} $</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const textAnimationClasses =\r\n    \"animate__animated  animate__zoomIn animate__slow\";\r\n\r\n  return (\r\n    <div className={styles.chartContainer}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart fill=\"rgba(255, 255, 255, 0.6)\">\r\n          <Tooltip cursor={{ cursor: \"pointer\" }} content={CustomTooltip} />\r\n          <Pie\r\n            startOffset={0}\r\n            className={styles.chart}\r\n            data={sortedData}\r\n            dataKey=\"value\"\r\n            outerRadius={135}\r\n            innerRadius={95}\r\n            // paddingAngle={5}\r\n            fill=\"rgba(255, 255, 255, 0.6)\">\r\n            {data.map((entry, index) => {\r\n              //   console.log(entry.backgroundColor);\r\n              // console.log(entry.name);\r\n\r\n              return <Cell key={index} fill={entry.backgroundColor} />;\r\n            })}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n\r\n      <div className={clsx(styles.chartCont, textAnimationClasses)}>\r\n        <p\r\n          className={clsx(\r\n            styles.chartBalance,\r\n            theme === \"light\" && styles.light,\r\n            theme === \"violet\" && styles.violet\r\n          )}>\r\n          <span>Balance</span>\r\n          {balance ? Number(balance).toFixed(2) : Number(0).toFixed(2)}\r\n          <span>₴</span>\r\n        </p>\r\n        <p\r\n          className={clsx(\r\n            styles.chartBalance,\r\n            theme === \"light\" && styles.light,\r\n            theme === \"violet\" && styles.violet\r\n          )}>\r\n          <span>Day profit</span>\r\n          {balance ? Number(proc).toFixed(2) : Number(0).toFixed(2)}\r\n          <span>%</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"ThemeSelector_selector__8B90t\",\"button\":\"ThemeSelector_button__BjiGM\",\"span\":\"ThemeSelector_span__xRnuE\",\"spanDark\":\"ThemeSelector_spanDark__D5nwv\",\"svg\":\"ThemeSelector_svg__fmkd2\",\"svgDark\":\"ThemeSelector_svgDark__1QHZq\",\"options\":\"ThemeSelector_options__iZ5E9\",\"optionsDark\":\"ThemeSelector_optionsDark__I5X0G\",\"optionsViolet\":\"ThemeSelector_optionsViolet__7Fr0x\",\"option\":\"ThemeSelector_option__yoxSw\",\"optionDark\":\"ThemeSelector_optionDark__ojRjj\",\"activeOption\":\"ThemeSelector_activeOption__+r6Nn\",\"activeOptionViolet\":\"ThemeSelector_activeOptionViolet__7qNLn\"};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateTheme } from \"../../redux/auth/operationsAuth\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport { HiChevronDown, HiChevronUp } from \"react-icons/hi\";\r\n\r\nimport styles from \"./ThemeSelector.module.css\";\r\n\r\nexport default function ThemeSelector({ theme }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [themeA, setTheme] = useState(theme || \"light\");\r\n  const [isOpen, setIsOpen] = useState(false); // Controls dropdown open/close\r\n\r\n  const dropdownRef = useRef(null); // Ref for dropdown to detect clicks outside\r\n\r\n  const handleSelect = (selectedTheme) => {\r\n    setTheme(selectedTheme);\r\n    dispatch(updateTheme(selectedTheme));\r\n\r\n    setIsOpen(false); // Close the dropdown\r\n  };\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false); // Close dropdown if click is outside\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.selector} ref={dropdownRef}>\r\n      {/* Display \"Theme\" when dropdown is closed */}\r\n      <button\r\n        className={styles.button}\r\n        onClick={() => setIsOpen((prev) => !prev)}>\r\n        <span\r\n          className={clsx(\r\n            styles.span,\r\n            themeA === \"dark\" || themeA === \"violet\"\r\n              ? styles.spanDark\r\n              : styles.span\r\n          )}>\r\n          Theme\r\n        </span>\r\n        {!isOpen ? (\r\n          <HiChevronDown\r\n            className={clsx(\r\n              styles.svg,\r\n              themeA === \"dark\" || themeA === \"violet\"\r\n                ? styles.svgDark\r\n                : styles.svg\r\n            )}\r\n          />\r\n        ) : (\r\n          <HiChevronUp\r\n            className={clsx(\r\n              styles.svg,\r\n              themeA === \"dark\" || themeA === \"violet\"\r\n                ? styles.svgDark\r\n                : styles.svg\r\n            )}\r\n          />\r\n        )}\r\n      </button>\r\n\r\n      {/* Dropdown options */}\r\n      {isOpen && (\r\n        <ul\r\n          className={clsx(\r\n            styles.options,\r\n            themeA === \"dark\" ? styles.optionsDark : styles.options,\r\n            themeA === \"violet\" ? styles.optionsViolet : styles.options\r\n          )}>\r\n          {[\"light\", \"dark\"].map((option) => (\r\n            <li\r\n              key={option}\r\n              className={clsx(\r\n                styles.option,\r\n                themeA === \"dark\" ? styles.optionDark : styles.option,\r\n                option === themeA &&\r\n                  (themeA === \"violet\"\r\n                    ? styles.activeOptionViolet\r\n                    : styles.activeOption)\r\n              )}\r\n              onClick={() => handleSelect(option)}>\r\n              {option.charAt(0).toUpperCase() + option.slice(1)}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nThemeSelector.propTypes = {\r\n  theme: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"LanguageSelector_selector__CxuiP\",\"button\":\"LanguageSelector_button__Zlzr9\",\"span\":\"LanguageSelector_span__USHqK\",\"spanDark\":\"LanguageSelector_spanDark__ha1s-\",\"svg\":\"LanguageSelector_svg__yM-s5\",\"svgDark\":\"LanguageSelector_svgDark__knsVD\",\"options\":\"LanguageSelector_options__IvSSU\",\"optionsDark\":\"LanguageSelector_optionsDark__l4AUJ\",\"optionsViolet\":\"LanguageSelector_optionsViolet__TYGx2\",\"option\":\"LanguageSelector_option__AWRP-\",\"optionDark\":\"LanguageSelector_optionDark__BNprc\",\"activeOption\":\"LanguageSelector_activeOption__6dhBC\",\"activeOptionViolet\":\"LanguageSelector_activeOptionViolet__biQYQ\"};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n// import { updateTheme } from \"../../redux/private/operationsPrivate\"; // Adjust the import path for your Redux slice\r\n// import { useAuth } from \"../../hooks/useAuth\"; // Adjust the import path for your custom hook\r\n// import { refreshUser } from \"../../redux/auth/operationsAuth\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport { HiChevronDown, HiChevronUp } from \"react-icons/hi\";\r\n\r\nimport styles from \"./LanguageSelector.module.css\";\r\n\r\nexport default function LanguageSelector({ theme, lang }) {\r\n  // const dispatch = useDispatch();\r\n  // const { user } = useAuth(); // Get user info\r\n\r\n  const [langA, setLang] = useState(lang || \"english\");\r\n  const [isOpen, setIsOpen] = useState(false); // Controls dropdown open/close\r\n\r\n  const dropdownRef = useRef(null); // Ref for dropdown to detect clicks outside\r\n\r\n  const handleSelect = (selectedLang) => {\r\n    setLang(selectedLang);\r\n    // dispatch(updateTheme(selectedTheme)); // Dispatch action with selected theme\r\n\r\n    localStorage.setItem(\"lang\", selectedLang); // Save theme to localStorage\r\n    // Timeout to delay `refreshUser` to give backend time to update\r\n    // setTimeout(() => {\r\n    //   dispatch(refreshUser());\r\n    // }, 500); // Adjust timeout duration as necessary\r\n\r\n    setIsOpen(false); // Close the dropdown\r\n  };\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false); // Close dropdown if click is outside\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.selector} ref={dropdownRef}>\r\n      {/* Display \"Theme\" when dropdown is closed */}\r\n      <button\r\n        className={styles.button}\r\n        onClick={() => setIsOpen((prev) => !prev)}>\r\n        <span\r\n          className={clsx(\r\n            styles.span,\r\n            theme === \"dark\" || theme === \"violet\"\r\n              ? styles.spanDark\r\n              : styles.span\r\n          )}>\r\n          Lang\r\n        </span>\r\n        {!isOpen ? (\r\n          <HiChevronDown\r\n            className={clsx(\r\n              styles.svg,\r\n              theme === \"dark\" || theme === \"violet\"\r\n                ? styles.svgDark\r\n                : styles.svg\r\n            )}\r\n          />\r\n        ) : (\r\n          <HiChevronUp\r\n            className={clsx(\r\n              styles.svg,\r\n              theme === \"dark\" || theme === \"violet\"\r\n                ? styles.svgDark\r\n                : styles.svg\r\n            )}\r\n          />\r\n        )}\r\n      </button>\r\n\r\n      {/* Dropdown options */}\r\n      {isOpen && (\r\n        <ul\r\n          className={clsx(\r\n            styles.options,\r\n            theme === \"dark\" ? styles.optionsDark : styles.options,\r\n            theme === \"violet\" ? styles.optionsViolet : styles.options\r\n          )}>\r\n          {[\"romanian\", \"english\"].map((option) => (\r\n            <li\r\n              key={option}\r\n              className={clsx(\r\n                styles.option,\r\n                theme === \"dark\" ? styles.optionDark : styles.option,\r\n                option === langA &&\r\n                  (theme === \"violet\"\r\n                    ? styles.activeOptionViolet\r\n                    : styles.activeOption)\r\n              )}\r\n              onClick={() => handleSelect(option)}>\r\n              {option.charAt(0).toUpperCase() + option.slice(1)}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nLanguageSelector.propTypes = {\r\n  lang: PropTypes.string,\r\n  theme: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__yidBL\",\"input\":\"Input_input__Fn6-M\",\"light\":\"Input_light__QrzSJ\",\"violetBorder\":\"Input_violetBorder__ZQnAh\",\"darkColor\":\"Input_darkColor__-Yisg\",\"commentInput\":\"Input_commentInput__VCJpK\",\"normalColor\":\"Input_normalColor__svAc6\",\"inputCenter\":\"Input_inputCenter__QKhgb\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n  isComment,\r\n  theme,\r\n}) {\r\n  // Verifică dacă este un câmp de comentarii\r\n  if (isComment) {\r\n    return (\r\n      <textarea\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input, // Clasa generală pentru input\r\n          styles.commentInput, // Clasa specifică pentru comentarii\r\n          variant === \"center\" ? styles.inputCenter : styles.input,\r\n          theme === \"violet\" ? styles.violetBorder : styles.input,\r\n          theme === \"dark\" ? styles.darkColor : styles.normalColor,\r\n          className\r\n        )}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Dacă nu este câmp de comentarii, renderizează un input normal\r\n  return (\r\n    <input\r\n      autoComplete={autoComplete || \"off\"}\r\n      style={{ paddingLeft: paddingLeft || \"18px\" }}\r\n      onChange={handleChange}\r\n      name={name || \"\"}\r\n      className={clsx(\r\n        styles.input,\r\n        styles.light, // Clasa generală pentru input\r\n        variant === \"center\" ? styles.inputCenter : styles.input,\r\n        theme === \"violet\" ? styles.violetBorder : styles.input,\r\n        theme === \"dark\" ? styles.darkColor : styles.normalColor,\r\n        className\r\n      )}\r\n      type={type || \"text\"}\r\n      placeholder={placeholder || \"\"}\r\n      required={required || false}\r\n      value={value || \"\"}\r\n      onBlur={handleBlur}\r\n    />\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  theme: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  name: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  width: PropTypes.string,\r\n  value: PropTypes.string,\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.string,\r\n  handleBlur: PropTypes.func,\r\n  isComment: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal-overlay-need\":\"UpdateUser_modal-overlay-need__IS1Hs\",\"close-btn\":\"UpdateUser_close-btn__p9JrV\",\"modalContainerNeed\":\"UpdateUser_modalContainerNeed__IwISL\",\"contLight\":\"UpdateUser_contLight__a9fBN\",\"contDark\":\"UpdateUser_contDark__c-UqS\",\"text\":\"UpdateUser_text__qyndS\",\"textDark\":\"UpdateUser_textDark__37hua\",\"btn\":\"UpdateUser_btn__U+ICe\",\"imgCont\":\"UpdateUser_imgCont__b7pXp\",\"imgContViolet\":\"UpdateUser_imgContViolet__gRUxS\",\"imgContLight\":\"UpdateUser_imgContLight__Kp5Lq\",\"userImg\":\"UpdateUser_userImg__BvSjz\",\"imgPlusCont\":\"UpdateUser_imgPlusCont__kSGL7\",\"imgPlusBtn\":\"UpdateUser_imgPlusBtn__dK6w6\",\"iconPlusViolet\":\"UpdateUser_iconPlusViolet__w1VF3\",\"textarea\":\"UpdateUser_textarea__5LCkp\",\"inputWrapper\":\"UpdateUser_inputWrapper__R71Wn\",\"eyeIcon\":\"UpdateUser_eyeIcon__KM4Ul\",\"eyeIconDark\":\"UpdateUser_eyeIconDark__TORv+\",\"modal-container-need\":\"UpdateUser_modal-container-need__tWnQc\"};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  refreshUser,\r\n  updateUserInfo,\r\n  updateUserAvatar,\r\n} from \"../../../redux/auth/operationsAuth\";\r\nimport useToggle from \"../../../hooks/useToggle\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport Input from \"../../InputAdi/Input\";\r\nimport Button from \"../../commonComponents/Button\";\r\n\r\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// import smartImage from \"../../../images/smart1Edited.jpg\"\r\n\r\nimport styles from \"./UpdateUser.module.css\";\r\n\r\nexport default function UpdateUser({ onClose, user, theme }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const formRef = useRef();\r\n  const modalRef = useRef();\r\n  const fileInputRef = useRef(null); // File input reference\r\n\r\n  const [userNewName, setUserNewName] = useState(user?.username || \"User\");\r\n  const [userNewMail, setUserNewMail] = useState(user?.email || \"asd@asd.com\");\r\n  const [userNewPassword, setUserNewPassword] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const [type, setType] = useState(\"password\");\r\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\r\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\r\n\r\n  const handleUserNameChange = (e) => setUserNewName(e.target.value);\r\n  const handleUserMailAddressChange = (e) => setUserNewMail(e.target.value);\r\n  const handleUserPasswordChange = (e) => setUserNewPassword(e.target.value);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      setSelectedFile(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Dispatch user info update\r\n    dispatch(\r\n      updateUserInfo({\r\n        username: userNewName,\r\n        email: userNewMail,\r\n        password: userNewPassword,\r\n      })\r\n    );\r\n\r\n    // Dispatch the avatar update if a file is selected\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append(\"avatar\", selectedFile);\r\n\r\n      dispatch(updateUserAvatar(formData))\r\n        .then((response) => {\r\n          // Handle success response\r\n          if (response) {\r\n            toast.success(\"Avatar updated successfully!\"); // Success toast\r\n          } else {\r\n            toast.error(\"Failed to update avatar. Please try again.\"); // Error toast\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          // console.error(\"Error during avatar upload:\", error.message);\r\n          toast.error(\"An error occurred. Please try again later.\"); // Error toast\r\n        });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      dispatch(refreshUser());\r\n    }, 3500);\r\n\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleEscapeKey = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleEscapeKey);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEscapeKey);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleModalClick = (e) => e.stopPropagation();\r\n\r\n  // Set correct avatar URL\r\n  const imageUrl = selectedFile\r\n    ? URL.createObjectURL(selectedFile)\r\n    : user?.avatarURL\r\n    ? user?.avatarURL.startsWith(\"http\")\r\n      ? user?.avatarURL\r\n      : `http://localhost:5000/${user.avatarURL}`\r\n    : \"/default-avatar.jpg\"; // Default fallback image\r\n\r\n  return (\r\n    <div\r\n      ref={modalRef}\r\n      onClick={(e) => {\r\n        if (!formRef.current.contains(e.target)) {\r\n          onClose();\r\n        }\r\n      }}\r\n      className={styles[\"modal-overlay-need\"]}>\r\n      <div\r\n        onClick={handleModalClick}\r\n        ref={formRef}\r\n        className={clsx(\r\n          styles.modalContainerNeed,\r\n          theme === \"dark\" ? styles.contDark : styles.contLight\r\n        )}>\r\n        <button type=\"button\" className={styles[\"close-btn\"]} onClick={onClose}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M13.5 4.5L4.5 13.5\"\r\n              stroke={theme === \"dark\" ? \"white\" : \"black\"}\r\n              strokeWidth=\"1.5\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M4.5 4.5L13.5 13.5\"\r\n              stroke={theme === \"dark\" ? \"white\" : \"black\"}\r\n              strokeWidth=\"1.5\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </button>\r\n\r\n        <h2\r\n          className={clsx(styles.text, {\r\n            [styles.textDark]: theme === \"dark\",\r\n          })}>\r\n          Edit profile\r\n        </h2>\r\n\r\n        {/* Profile Image Section */}\r\n        <div\r\n          className={clsx(\r\n            styles.imgCont,\r\n            theme === \"violet\"\r\n              ? styles.imgContViolet\r\n              : theme === \"light\"\r\n              ? styles.imgContLight\r\n              : null\r\n          )}>\r\n          <img className={styles.userImg} src={imageUrl} alt=\"User Avatar\" />\r\n          <div className={styles.imgPlusCont}>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileInputRef}\r\n              onChange={handleFileChange}\r\n            />\r\n            <button\r\n              className={clsx(\r\n                styles.imgPlusBtn,\r\n                theme === \"violet\" ? styles.iconPlusViolet : styles.iconPlus\r\n              )}\r\n              onClick={() => fileInputRef.current.click()}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"20\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"none\">\r\n                <path\r\n                  d=\"M10 4.16663V15.8333\"\r\n                  stroke={theme === \"violet\" ? \"white\" : \"#121212\"}\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M4.16699 10H15.8337\"\r\n                  stroke={theme === \"violet\" ? \"white\" : \"#121212\"}\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className={styles[\"div-container\"]}>\r\n          <Input\r\n            className={styles.textarea}\r\n            theme={theme}\r\n            value={userNewName}\r\n            handleChange={handleUserNameChange}\r\n            placeholder=\"Name\"\r\n            name=\"title\"\r\n            type=\"text\"\r\n          />\r\n\r\n          <Input\r\n            className={styles.textarea}\r\n            theme={theme}\r\n            value={userNewMail}\r\n            handleChange={handleUserMailAddressChange}\r\n            placeholder=\"Email\"\r\n            name=\"Email\"\r\n            type=\"text\"\r\n          />\r\n\r\n          <div className={styles.inputWrapper}>\r\n            {eyeVisible && (\r\n              <VscEye\r\n                onClick={() => {\r\n                  toggleEyeVisible();\r\n                  toggleClosedEyeVisible();\r\n                  setType(\"text\");\r\n                }}\r\n                size=\"24px\"\r\n                className={clsx(\r\n                  styles.eyeIcon,\r\n                  theme === \"dark\" ? styles.eyeIconDark : null\r\n                )}\r\n              />\r\n            )}\r\n            {closedEyeVisible && (\r\n              <VscEyeClosed\r\n                onClick={() => {\r\n                  toggleEyeVisible();\r\n                  toggleClosedEyeVisible();\r\n                  setType(\"password\");\r\n                }}\r\n                size=\"24px\"\r\n                className={clsx(\r\n                  styles.eyeIcon,\r\n                  theme === \"dark\" ? styles.eyeIconDark : null\r\n                )}\r\n              />\r\n            )}\r\n            <Input\r\n              className={styles.textarea}\r\n              value={userNewPassword}\r\n              theme={theme}\r\n              handleChange={handleUserPasswordChange}\r\n              placeholder=\"New password\"\r\n              name=\"Password\"\r\n              type={type}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            theme={theme}\r\n            className={styles.btn}\r\n            type=\"submit\"\r\n            variant=\"send\">\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUpdateUser.propTypes = {\r\n  onClose: PropTypes.func,\r\n  user: PropTypes.object,\r\n  theme: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__kV5p+\",\"hamButton\":\"Header_hamButton__IuWnQ\",\"headerLight\":\"Header_headerLight__pJIMa\",\"headerDark\":\"Header_headerDark__RRiN-\",\"headerViolet\":\"Header_headerViolet__1XwKS\",\"logoSection\":\"Header_logoSection__QRPlV\",\"cBotAvatar\":\"Header_cBotAvatar__NpNve\",\"rightContainer\":\"Header_rightContainer__MdPJx\",\"userContainer\":\"Header_userContainer__Ob7jl\",\"userContainerDark\":\"Header_userContainerDark__XRkj-\",\"userName\":\"Header_userName__V7kRp\",\"userNameLight\":\"Header_userNameLight__Yfxh3\",\"username\":\"Header_username__9Oj6u\",\"cogIcon\":\"Header_cogIcon__gVoYK\",\"image\":\"Header_image__iqKKs\",\"img\":\"Header_img__T6iWz\",\"imgViolet\":\"Header_imgViolet__AsR-S\"};","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport { FaCog } from \"react-icons/fa\";\r\n\r\nimport ThemeSelector from \"../ThemeSelector/ThemeSelector\";\r\nimport LanguageSelector from \"../LanguageSelector/LanguageSelector\";\r\n\r\nimport UpdateUser from \"../modal/UpdateUser/UpdateUser\";\r\n\r\nimport smartImage from \"../../images/smart1Edited.jpg\";\r\n\r\nimport styles from \"./Header.module.css\";\r\n\r\nconst breakpoints = {\r\n  mobile: \"(max-width: 767px)\",\r\n  tablet: \"(min-width:768px)\",\r\n  desktop: \"(min-width:1115px)\",\r\n};\r\n\r\nfunction Header({ handleClick, handleRightClick, theme, lang }) {\r\n  const { user, avatarURL } = useAuth();\r\n\r\n  const [isUpdateUserModalVisible, setIsUpdateUserModalVisible] =\r\n    useState(false);\r\n\r\n  const handleOpenUpdateModal = () => {\r\n    setIsUpdateUserModalVisible(true);\r\n  };\r\n\r\n  const handleCloseUpdateModal = () => {\r\n    setIsUpdateUserModalVisible(false);\r\n  };\r\n\r\n  // const imageUrl = avatarURL?.startsWith(\"http\")\r\n  // ? avatarURL\r\n  //   : `https://taskpro-nodejs.onrender.com/${avatarURL}`;\r\n\r\n  const imageUrl = avatarURL?.startsWith(\"http\")\r\n    ? avatarURL\r\n    : `http://localhost:5000/${avatarURL}`;\r\n\r\n  const isMobile = useMediaQuery({ query: breakpoints.mobile });\r\n  const isTablet = useMediaQuery({ query: breakpoints.tablet });\r\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\r\n\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {isUpdateUserModalVisible && (\r\n        <UpdateUser\r\n          theme={theme}\r\n          user={user}\r\n          onClose={handleCloseUpdateModal}\r\n        />\r\n      )}\r\n      <header\r\n        className={clsx(\r\n          styles.header,\r\n          theme === \"dark\"\r\n            ? styles.headerDark\r\n            : theme === \"violet\"\r\n            ? styles.headerViolet\r\n            : theme === \"light\"\r\n            ? styles.headerLight\r\n            : styles.headerLight\r\n        )}>\r\n        {isMobile && (\r\n          <button onClick={handleClick} className={styles.hamButton}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              onMouseEnter={() => setHover(true)}\r\n              onMouseLeave={() => setHover(false)}>\r\n              <path\r\n                d=\"M3 12H21\"\r\n                stroke={\r\n                  hover\r\n                    ? \"var(--brand-color)\"\r\n                    : clsx(\r\n                        theme === \"dark\" || theme === \"violet\"\r\n                          ? \"rgba(255, 255, 255, 0.8)\"\r\n                          : \"#161616\"\r\n                      )\r\n                }\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M3 6H21\"\r\n                stroke={\r\n                  hover\r\n                    ? \"var(--brand-color)\"\r\n                    : clsx(\r\n                        theme === \"dark\" || theme === \"violet\"\r\n                          ? \"rgba(255, 255, 255, 0.8)\"\r\n                          : \"#161616\"\r\n                      )\r\n                }\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M3 18H21\"\r\n                stroke={\r\n                  hover\r\n                    ? \"var(--brand-color)\"\r\n                    : clsx(\r\n                        theme === \"dark\" || theme === \"violet\"\r\n                          ? \"rgba(255, 255, 255, 0.8)\"\r\n                          : \"#161616\"\r\n                      )\r\n                }\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        )}\r\n\r\n        {isTablet && !isDesktop && (\r\n          <button onClick={handleClick} className={styles.hamButton}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              viewBox=\"0 0 32 32\"\r\n              fill=\"none\"\r\n              onMouseEnter={() => setHover(true)}\r\n              onMouseLeave={() => setHover(false)}>\r\n              <path\r\n                d=\"M4 16H28\"\r\n                stroke={\r\n                  hover\r\n                    ? \"var(--brand-color)\"\r\n                    : clsx(\r\n                        theme === \"dark\" || theme === \"violet\"\r\n                          ? \"rgba(255, 255, 255, 0.8)\"\r\n                          : \"#161616\"\r\n                      )\r\n                }\r\n                strokeWidth=\"2.5\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M4 8H28\"\r\n                stroke={\r\n                  hover\r\n                    ? \"var(--brand-color)\"\r\n                    : clsx(\r\n                        theme === \"dark\" || theme === \"violet\"\r\n                          ? \"rgba(255, 255, 255, 0.8)\"\r\n                          : \"#161616\"\r\n                      )\r\n                }\r\n                strokeWidth=\"2.5\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M4 24H28\"\r\n                stroke={\r\n                  hover\r\n                    ? \"var(--brand-color)\"\r\n                    : clsx(\r\n                        theme === \"dark\" || theme === \"violet\"\r\n                          ? \"rgba(255, 255, 255, 0.8)\"\r\n                          : \"#161616\"\r\n                      )\r\n                }\r\n                strokeWidth=\"2.5\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        )}\r\n\r\n        <LanguageSelector theme={theme} lang={lang} />\r\n        <ThemeSelector theme={theme} />\r\n\r\n        {isTablet && (\r\n          <div className={styles.logoSection}>\r\n            <img\r\n              className={styles.cBotAvatar}\r\n              src={smartImage}\r\n              alt=\"cBot avatar\"\r\n            />\r\n            <p\r\n              style={{ fontSize: \"16px\", fontWeight: \"bold\" }}\r\n              className={\r\n                theme === \"dark\" || theme === \"violet\"\r\n                  ? styles.userName\r\n                  : styles.userNameLight\r\n              }>\r\n              Smart Marketing\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.rightContainer}>\r\n          <div\r\n            className={clsx(\r\n              styles.userContainer,\r\n              theme === \"dark\" ? styles.userContainerDark : styles.userContainer\r\n            )}>\r\n            <p\r\n              className={clsx(\r\n                styles.username,\r\n                theme === \"dark\" || theme === \"violet\"\r\n                  ? styles.userName\r\n                  : styles.userNameLight\r\n              )}\r\n              onClick={handleOpenUpdateModal}>\r\n              <FaCog\r\n                size={14}\r\n                color={\r\n                  theme === \"dark\" || theme === \"violet\"\r\n                    ? \"rgba(255, 255, 255, 0.8)\"\r\n                    : \"#161616cc\"\r\n                }\r\n                className={styles.cogIcon}\r\n              />\r\n              <span>{user?.username || \"User\"}</span>\r\n            </p>\r\n\r\n            <img\r\n              className={clsx(\r\n                styles.image,\r\n                theme === \"violet\" ? styles.imgViolet : styles.img\r\n              )}\r\n              src={imageUrl || smartImage}\r\n              alt=\"User Avatar\"\r\n              // style={{ width: \"42px\", height: \"42px\", borderRadius: \"50%\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {isMobile && (\r\n          <button onClick={handleRightClick} className={styles.hamButton}>\r\n            <FaCog\r\n              size={24}\r\n              color={\r\n                theme === \"dark\" || theme === \"violet\"\r\n                  ? \"rgba(255, 255, 255, 0.8)\"\r\n                  : \"#161616cc\"\r\n              }\r\n              className={styles.cogIcon}\r\n            />\r\n          </button>\r\n        )}\r\n\r\n        {isTablet && !isDesktop && (\r\n          <button onClick={handleRightClick} className={styles.hamButton}>\r\n            <FaCog\r\n              size={32}\r\n              color={\r\n                theme === \"dark\" || theme === \"violet\"\r\n                  ? \"rgba(255, 255, 255, 0.8)\"\r\n                  : \"#161616cc\"\r\n              }\r\n              className={styles.cogIcon}\r\n            />\r\n          </button>\r\n        )}\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  handleClick: PropTypes.func,\r\n  handleRightClick: PropTypes.func,\r\n  theme: PropTypes.oneOf([\"light\", \"dark\"]), // Theme options\r\n};\r\n\r\nexport default Header;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"SharedLayout_cont__3N67t\",\"main\":\"SharedLayout_main__6NzJt\",\"mainLight\":\"SharedLayout_mainLight__baJUa\",\"mainViolet\":\"SharedLayout_mainViolet__049vm\",\"mainDark\":\"SharedLayout_mainDark__gELPc\"};","// import React, { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header\";\r\n\r\n// import { useAuth } from \"../../hooks/useAuth\";\r\n// import { usePrivate } from \"../../hooks/usePrivate\";\r\n\r\n// import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// import clsx from \"clsx\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\n// import ScreenPage from \"../../pages/ScreenPage\";\r\n\r\n// import { usePublic } from \"../../hooks/usePublic\";\r\n// import { useDispatch } from \"react-redux\";\r\n\r\n// import {\r\n//   clearIsRegistered,\r\n//   clearUpdateUser,\r\n//   reset,\r\n// } from \"../../redux/auth/authSlice\";\r\n// import { resetHelpForm } from \"../../redux/public/helpSlice\";\r\n// import { clearUser } from \"../../redux/private/privateSlice\";\r\n\r\nimport styles from \"./SharedLayout.module.css\";\r\n\r\n\r\n\r\nfunction SharedLayout({ handleClick, handleRightClick, theme, lang }) {\r\n  return (\r\n    <div className={styles.cont}>\r\n      <Header\r\n        handleClick={handleClick}\r\n        handleRightClick={handleRightClick}\r\n        theme={theme}\r\n        lang={lang}\r\n      />\r\n\r\n      <main\r\n        className={clsx(\r\n          styles.main,\r\n          theme === \"dark\"\r\n            ? styles.mainDark\r\n            : theme === \"violet\"\r\n            ? styles.mainViolet\r\n            : theme === \"light\"\r\n            ? styles.mainLight\r\n            : styles.mainLight\r\n        )}>\r\n        <Outlet />\r\n      </main>\r\n\r\n      <Footer sharedFooter={true} />\r\n    </div>\r\n  );\r\n}\r\n\r\nSharedLayout.propTypes = {\r\n  handleClick: PropTypes.func,\r\n  handleRightClick: PropTypes.func,\r\n  theme: PropTypes.oneOf([\"light\", \"dark\"]), // Theme options\r\n  lang: PropTypes.string, // Language option\r\n};\r\n\r\nexport default SharedLayout;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalClassName\":\"Modal_modalClassName__+3EVH\",\"imageLeft\":\"Modal_imageLeft__3YSaD\",\"imageRight\":\"Modal_imageRight__o3evU\",\"content\":\"Modal_content__ZY7SZ\",\"darkContent\":\"Modal_darkContent__PkQnu\",\"violetContent\":\"Modal_violetContent__Ocs6j\",\"closeModal\":\"Modal_closeModal__+F7ui\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { HiX } from \"react-icons/hi\";\r\n\r\nimport leftImage from \"../../../images/login-background-left-side.png\";\r\nimport rightImage from \"../../../images/login-background-right-side.png\";\r\n\r\nimport styles from \"./Modal.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nfunction Modal({\r\n  isModalVisible,\r\n  handleModalClose,\r\n  children,\r\n  dialogRef,\r\n  contRef,\r\n  modalContentClassName,\r\n  closeButton,\r\n  variant,\r\n}) {\r\n  if (!isModalVisible) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    isModalVisible && (\r\n      <section ref={dialogRef} className={styles.modalClassName}>\r\n        <div className={styles.imageLeft}>\r\n          <img src={leftImage} alt=\"Left\" />\r\n        </div>\r\n        <div className={styles.imageRight}>\r\n          <img src={rightImage} alt=\"Right\" />\r\n        </div>\r\n        <div\r\n          ref={contRef}\r\n          className={clsx(\r\n            styles.content,\r\n            variant === \"dark\" && styles.darkContent,\r\n            variant === \"violet\" && styles.violetContent,\r\n            variant === \"light\" && styles.content\r\n          )}>\r\n          <button\r\n            className={clsx(styles.closeModal, closeButton)}\r\n            id=\"closeModal\"\r\n            onClick={handleModalClose}>\r\n            <HiX size=\"16px\" />\r\n          </button>\r\n          {children}\r\n        </div>\r\n      </section>\r\n    )\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  isModalVisible: PropTypes.bool,\r\n  handleModalClose: PropTypes.func,\r\n  handleChange: PropTypes.func,\r\n  handleSave: PropTypes.func,\r\n  dialogRef: PropTypes.object,\r\n  contRef: PropTypes.object,\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  modalContentClassName: PropTypes.string,\r\n  closeButton: PropTypes.string,\r\n  variant: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"LogoSection_logo__H3CWZ\",\"lightLogo\":\"LogoSection_lightLogo__vS7TL\",\"svg\":\"LogoSection_svg__YxNTs\",\"lightSvg\":\"LogoSection_lightSvg__Tky98\",\"cBotAvatar\":\"LogoSection_cBotAvatar__EVnB-\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\n// import { useAuth } from \"../../hooks/useAuth\";\r\nimport smartImage from \"../../images/smart1Edited.jpg\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./LogoSection.module.css\";\r\n\r\nconst breakpoints = {\r\n  mobile: \"(max-width: 767px)\",\r\n  tablet: \"(min-width: 768px)\",\r\n  desktop: \"(min-width: 1115px)\",\r\n};\r\n\r\nconst LogoSection = ({ theme, menuType }) => {\r\n  const navigate = useNavigate();\r\n  // const { user } = useAuth();\r\n\r\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\r\n  const isTablet = useMediaQuery({ query: breakpoints.tablet });\r\n\r\n  const handleClick = () => {\r\n    navigate(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={handleClick}\r\n      className={clsx(\r\n        styles.logo,\r\n        theme === \"light\" ? styles.lightLogo : styles.logo\r\n      )}>\r\n      {isTablet &&\r\n        (theme === \"violet\" ? (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"32\"\r\n            height=\"32\"\r\n            viewBox=\"0 0 32 32\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M24 0H8C3.58172 0 0 3.58172 0 8V24C0 28.4183 3.58172 32 8 32H24C28.4183 32 32 28.4183 32 24V8C32 3.58172 28.4183 0 24 0Z\"\r\n              fill=\"#ECEDFD\"\r\n            />\r\n            <path\r\n              d=\"M13.3314 23.0269C13.5759 21.7553 13.7841 20.4168 14.0783 19.0782C14.2232 18.3777 14.0466 18.0788 13.2635 18.1324C12.4804 18.1859 11.6068 18.1591 10.7739 18.1324C9.94105 18.1056 9.79167 17.6862 10.2715 17.0883C12.6343 14.1703 15.0243 11.2881 17.4053 8.41472C17.6724 8.08902 17.9802 7.85701 18.4193 8.1115C18.8583 8.3478 18.7678 8.6512 18.6954 9.01706C18.4328 10.3556 18.2156 11.6941 17.9259 13.0058C17.7765 13.684 17.9711 13.9249 18.6773 13.8982C19.386 13.8625 20.096 13.8625 20.8047 13.8982C21.2076 13.8982 21.7372 13.6885 21.9454 14.2373C22.1536 14.7861 21.7146 15.0181 21.4928 15.3438C20.5875 16.4592 19.6701 17.5731 18.7406 18.6856C17.3797 20.3097 16.0292 21.9278 14.6894 23.54C14.4268 23.8567 14.1326 24.1111 13.6845 23.9504C13.2364 23.7898 13.3314 23.4106 13.3314 23.0269Z\"\r\n              fill=\"#5255BC\"\r\n            />\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"32\"\r\n            height=\"32\"\r\n            viewBox=\"0 0 32 32\"\r\n            fill=\"none\">\r\n            <path\r\n              d=\"M24 0H8C3.58172 0 0 3.58172 0 8V24C0 28.4183 3.58172 32 8 32H24C28.4183 32 32 28.4183 32 24V8C32 3.58172 28.4183 0 24 0Z\"\r\n              fill=\"#1F1F1F\"\r\n            />\r\n            <path\r\n              d=\"M13.3314 23.0269C13.5759 21.7553 13.7841 20.4168 14.0783 19.0782C14.2232 18.3777 14.0466 18.0788 13.2635 18.1324C12.4804 18.1859 11.6068 18.1591 10.7739 18.1324C9.94105 18.1056 9.79167 17.6862 10.2715 17.0883C12.6343 14.1703 15.0243 11.2881 17.4053 8.41472C17.6724 8.08902 17.9802 7.85701 18.4193 8.1115C18.8583 8.3478 18.7678 8.6512 18.6954 9.01706C18.4328 10.3556 18.2156 11.6941 17.9259 13.0058C17.7765 13.684 17.9711 13.9249 18.6773 13.8982C19.386 13.8625 20.096 13.8625 20.8047 13.8982C21.2076 13.8982 21.7372 13.6885 21.9454 14.2373C22.1536 14.7861 21.7146 15.0181 21.4928 15.3438C20.5875 16.4592 19.6701 17.5731 18.7406 18.6856C17.3797 20.3097 16.0292 21.9278 14.6894 23.54C14.4268 23.8567 14.1326 24.1111 13.6845 23.9504C13.2364 23.7898 13.3314 23.4106 13.3314 23.0269Z\"\r\n              fill=\"white\"\r\n            />\r\n          </svg>\r\n        ))}\r\n\r\n      {!isDesktop && !isTablet && (\r\n        <img className={styles.cBotAvatar} src={smartImage} alt=\"cBot avatar\" />\r\n      )}\r\n\r\n      <span\r\n        className={clsx(\r\n          styles.svg,\r\n          theme === \"light\" ? styles.lightSvg : styles.svg\r\n        )}>\r\n        {isTablet ? menuType : \"Smart Marketing App\"}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoSection;\r\n\r\nLogoSection.propTypes = {\r\n  theme: PropTypes.oneOf([\"light\", \"dark\", \"violet\"]),\r\n  menuType: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"BotStatusCard_cont__d-DiR\",\"strategyCard\":\"BotStatusCard_strategyCard__HC-0M\",\"firstLine\":\"BotStatusCard_firstLine__lfkag\",\"violet\":\"BotStatusCard_violet__ETbTn\",\"live\":\"BotStatusCard_live__7Dt0l\",\"symbolStrategy\":\"BotStatusCard_symbolStrategy__fu2-E\",\"startBtn\":\"BotStatusCard_startBtn__nC7h+\",\"stop\":\"BotStatusCard_stop__TpM0a\"};","// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"LiveSelector_selector__es6js\",\"button\":\"LiveSelector_button__-Id0n\",\"btnViolet\":\"LiveSelector_btnViolet__eKaUQ\",\"span\":\"LiveSelector_span__iyM40\",\"spanDark\":\"LiveSelector_spanDark__3dV5z\",\"svg\":\"LiveSelector_svg__VWMFq\",\"svgDark\":\"LiveSelector_svgDark__FhcX2\",\"options\":\"LiveSelector_options__I+I8-\",\"optionsDark\":\"LiveSelector_optionsDark__OWtHL\",\"optionsViolet\":\"LiveSelector_optionsViolet__vHjru\",\"option\":\"LiveSelector_option__PKRDA\",\"optionDark\":\"LiveSelector_optionDark__ZQNch\",\"activeOption\":\"LiveSelector_activeOption__EdCwy\",\"activeOptionViolet\":\"LiveSelector_activeOptionViolet__k0zUT\"};","import LiveSelector from \"./LiveSelector\";\r\n\r\nexport default LiveSelector;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n// import { updateTheme } from \"../../redux/private/operationsPrivate\"; // Adjust the import path for your Redux slice\r\n// import { useAuth } from \"../../hooks/useAuth\"; // Adjust the import path for your custom hook\r\n// import { refreshUser } from \"../../redux/auth/operationsAuth\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport { HiChevronDown, HiChevronUp } from \"react-icons/hi\";\r\n\r\nimport styles from \"./LiveSelector.module.css\";\r\n\r\nexport default function LiveSelector({ theme, live }) {\r\n  // const dispatch = useDispatch();\r\n  // const { user } = useAuth(); // Get user info\r\n  const cBotSelected = JSON.parse(localStorage.getItem(\"cBotSelected\"));\r\n\r\n  const [liveA, setLive] = useState(live || \"live\");\r\n  const [isOpen, setIsOpen] = useState(false); // Controls dropdown open/close\r\n\r\n  const dropdownRef = useRef(null); // Ref for dropdown to detect clicks outside\r\n\r\n  const handleSelect = (selectedlive) => {\r\n    setLive(selectedlive);\r\n    // dispatch(updateTheme(selectedTheme)); // Dispatch action with selected theme\r\n\r\n    const modifiedCBotSelected = { ...cBotSelected, live: selectedlive };\r\n    localStorage.setItem(\"cBotSelected\", JSON.stringify(modifiedCBotSelected));\r\n\r\n    setIsOpen(false); // Close the dropdown\r\n  };\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false); // Close dropdown if click is outside\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.selector} ref={dropdownRef}>\r\n      {/* Display \"Theme\" when dropdown is closed */}\r\n      <button\r\n        className={clsx(styles.button, theme === \"violet\" && styles.btnViolet)}\r\n        onClick={() => setIsOpen((prev) => !prev)}>\r\n        <span\r\n          className={clsx(\r\n            styles.span,\r\n            theme === \"violet\" ? styles.spanDark : styles.span\r\n          )}>\r\n          {liveA}\r\n        </span>\r\n        {!isOpen ? (\r\n          <HiChevronDown\r\n            className={clsx(\r\n              styles.svg,\r\n              theme === \"violet\" ? styles.svgDark : styles.svg\r\n            )}\r\n          />\r\n        ) : (\r\n          <HiChevronUp\r\n            className={clsx(\r\n              styles.svg,\r\n              theme === \"dark\" || theme === \"violet\"\r\n                ? styles.svgDark\r\n                : styles.svg\r\n            )}\r\n          />\r\n        )}\r\n      </button>\r\n\r\n      {/* Dropdown options */}\r\n      {isOpen && (\r\n        <ul\r\n          className={clsx(\r\n            styles.options,\r\n            theme === \"dark\" ? styles.optionsDark : styles.options,\r\n            theme === \"violet\" ? styles.optionsViolet : styles.options\r\n          )}>\r\n          {[\"live\", \"demo\"].map((option) => (\r\n            <li\r\n              key={option}\r\n              className={clsx(\r\n                styles.option,\r\n                theme === \"dark\" ? styles.optionDark : styles.option,\r\n                option === liveA &&\r\n                  (theme === \"violet\"\r\n                    ? styles.activeOptionViolet\r\n                    : styles.activeOption)\r\n              )}\r\n              onClick={() => handleSelect(option)}>\r\n              {option.charAt(0).toUpperCase() + option.slice(1)}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nLiveSelector.propTypes = {\r\n  live: PropTypes.string,\r\n  theme: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./BotStatusCard.module.css\";\r\nimport LiveSelector from \"../commonComponents/Loader/LiveSelector\";\r\n\r\nexport default function BotStatusCard({\r\n  theme,\r\n  symbol,\r\n  live,\r\n  handleClick,\r\n  started,\r\n  name,\r\n}) {\r\n  return (\r\n    <div className={clsx(styles.cont)}>\r\n      <div className={styles.strategyCard}>\r\n        <div\r\n          className={clsx(\r\n            styles.firstLine,\r\n            theme === \"violet\" && styles.violet\r\n          )}>\r\n          RobiStrategy ForexGaby\r\n        </div>\r\n        <div className={styles.live}>\r\n          <LiveSelector theme={theme} live={live} /> - 2054898 - FP Markets\r\n        </div>\r\n        <div\r\n          className={clsx(\r\n            styles.symbolStrategy,\r\n            theme === \"violet\" && styles.violet\r\n          )}\r\n          id=\"symbolStrategy\">\r\n          <span>{symbol} - m15 </span>\r\n          <span>{name}</span>\r\n        </div>\r\n      </div>\r\n      <button\r\n        className={clsx(styles.startBtn, started && styles.stop)}\r\n        id=\"btnBot\"\r\n        onClick={handleClick}>\r\n        {started ? \"Stop cBot\" : \"Start cBot\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nBotStatusCard.propTypes = {\r\n  theme: PropTypes.string,\r\n  symbol: PropTypes.string,\r\n  live: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n  started: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"BotsStatus_cont__Iv6Vc\",\"noSelected\":\"BotsStatus_noSelected__nVNDg\",\"lightNoSelected\":\"BotsStatus_lightNoSelected__aeYmW\",\"violetNoSelected\":\"BotsStatus_violetNoSelected__hBNve\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport clsx from \"clsx\";\r\nimport BotStatusCard from \"../BotStatusCard/BotStatusCard\";\r\n\r\nimport styles from \"./BotsStatus.module.css\";\r\n\r\nexport default function BotsStatus({\r\n  theme,\r\n  symbol,\r\n  live,\r\n  handleClick,\r\n  started,\r\n  name,\r\n}) {\r\n  const botSelected = localStorage.getItem(\"cBotSelected\")\r\n    ? localStorage.getItem(\"cBotSelected\")\r\n    : false;\r\n\r\n  return botSelected ? (\r\n    <BotStatusCard\r\n      theme={theme}\r\n      symbol={symbol}\r\n      live={live}\r\n      handleClick={handleClick}\r\n      started={started}\r\n      name={name}\r\n    />\r\n  ) : (\r\n    <p\r\n      className={clsx(\r\n        styles.noSelected,\r\n        theme === \"light\" && styles.lightNoSelected,\r\n        theme === \"violet\" && styles.violetNoSelected\r\n      )}>\r\n      Please selet a C-bot from Robots section or from settings sidebar to\r\n      engage\r\n    </p>\r\n  );\r\n}\r\n\r\nBotsStatus.propTypes = {\r\n  theme: PropTypes.string,\r\n  symbol: PropTypes.string,\r\n  live: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n  started: PropTypes.bool,\r\n  handleClick: PropTypes.func,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Sidebar_cont__ig0zE\",\"projectsCont\":\"Sidebar_projectsCont__VRnbJ\",\"projectsNav\":\"Sidebar_projectsNav__ej3Vz\",\"link\":\"Sidebar_link__jKskW\",\"activeLink\":\"Sidebar_activeLink__7ImyY\",\"asideLight\":\"Sidebar_asideLight__cuQfB\",\"asideViolet\":\"Sidebar_asideViolet__+khu2\",\"asideDark\":\"Sidebar_asideDark__587GD\",\"sideLinks\":\"Sidebar_sideLinks__35eIw\",\"menuBtn\":\"Sidebar_menuBtn__O3D-O\",\"activeBtn\":\"Sidebar_activeBtn__jPWgs\",\"lightMenuBtn\":\"Sidebar_lightMenuBtn__C4EEo\",\"lightActiveMenuBtn\":\"Sidebar_lightActiveMenuBtn__wjQSs\",\"info\":\"Sidebar_info__lxb0t\",\"noSelected\":\"Sidebar_noSelected__Ga9Qg\",\"balance\":\"Sidebar_balance__TQfMB\",\"lightNoSelected\":\"Sidebar_lightNoSelected__momiy\",\"violetNoSelected\":\"Sidebar_violetNoSelected__ixkFV\",\"logoutButton\":\"Sidebar_logoutButton__Oc8oC\",\"logoutButtonSpan\":\"Sidebar_logoutButtonSpan__wl4lO\",\"logoutButtonSpanLight\":\"Sidebar_logoutButtonSpanLight__W9BYS\",\"modalLogoutActionCenter\":\"Sidebar_modalLogoutActionCenter__qVc4J\",\"logo\":\"Sidebar_logo__dkMFW\",\"closeButtonDark\":\"Sidebar_closeButtonDark__NDUVd\",\"userContainerDark\":\"Sidebar_userContainerDark__NULBg\",\"question\":\"Sidebar_question__DXfwM\",\"questionDark\":\"Sidebar_questionDark__3DKtu\",\"modalButtonsContainer\":\"Sidebar_modalButtonsContainer__mazJM\",\"noScroll\":\"Sidebar_noScroll__4JKKv\",\"violet\":\"Sidebar_violet__eYm6L\"};","import Sidebar from \"./Sidebar\";\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n// import { useMediaQuery } from \"react-responsive\";\r\n\r\n// import { useAuth } from \"../../hooks/useAuth\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport { logOut } from \"../../redux/auth/operationsAuth\";\r\nimport { reset } from \"../../redux/auth/authSlice\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport Button from \"../commonComponents/Button\";\r\nimport Modal from \"../commonComponents/Modal/Modal\";\r\n\r\nimport smartImage from \"../../images/smart1Edited.jpg\";\r\n\r\nimport LogoSection from \"../LogoSection/LogoSection\";\r\n\r\nimport BotsStatus from \"../BotsStatus/BotsStatus\";\r\n\r\nimport getCurrentDateTime from \"../../utils/getCurrentDateTime\";\r\n\r\nimport { balance } from \"../Chart/Chart\";\r\n\r\nimport styles from \"./Sidebar.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Sidebar({ sideBarRef, theme }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isLogoutModalVisible, toggleIsLogoutModalVisible] = useToggle(false);\r\n  const modalRef = useRef();\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const botSelected = JSON.parse(localStorage.getItem(\"cBotSelected\")) || null;\r\n  const [botStarted, setBotStarted] = useState(\r\n    botSelected ? botSelected.message : false\r\n  );\r\n\r\n  const robots = JSON.parse(localStorage.getItem(\"cBots\")) || [];\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logOut());\r\n    dispatch(reset());\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLogoutModalVisible) {\r\n      document.body.classList.add(styles.noScroll);\r\n    } else {\r\n      document.body.classList.remove(styles.noScroll);\r\n    }\r\n\r\n    const handleEscapeKey = (event) => {\r\n      if (event.key === \"Escape\") toggleIsLogoutModalVisible();\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleEscapeKey);\r\n\r\n    return () => {\r\n      document.body.classList.remove(styles.noScroll);\r\n      document.removeEventListener(\"keydown\", handleEscapeKey);\r\n    };\r\n  }, [isLogoutModalVisible, toggleIsLogoutModalVisible]);\r\n\r\n  const closeOnClickOutside = (event) => {\r\n    // console.log(\"close\");\r\n\r\n    if (event.target !== event.currentTarget) {\r\n      toggleIsLogoutModalVisible();\r\n    }\r\n  };\r\n\r\n  function handleStartBot() {\r\n    // Toggle local state\r\n    const newBotStarted = {\r\n      ...botSelected,\r\n      message: !botStarted,\r\n      time: getCurrentDateTime(),\r\n    };\r\n    setBotStarted(!botStarted);\r\n\r\n    // Oprim orice alt bot pornit\r\n    const updatedRobots = robots.map((bot) => {\r\n      if (bot.id === newBotStarted.id) {\r\n        return newBotStarted; // actualizăm botul selectat\r\n      }\r\n      return { ...bot, message: false }; // oprim restul\r\n    });\r\n\r\n    // Salvăm în localStorage\r\n    localStorage.setItem(\"cBotSelected\", JSON.stringify(newBotStarted));\r\n    localStorage.setItem(\"cBots\", JSON.stringify(updatedRobots));\r\n  }\r\n\r\n  return (\r\n    <aside\r\n      ref={sideBarRef}\r\n      className={clsx(\r\n        styles.cont,\r\n        theme === \"dark\"\r\n          ? styles.asideDark\r\n          : theme === \"violet\"\r\n          ? styles.asideViolet\r\n          : styles.asideLight\r\n      )}>\r\n      {isLogoutModalVisible && (\r\n        <div className={styles.modalOverlay}>\r\n          <div\r\n            ref={modalRef}\r\n            className={clsx(\r\n              styles.modalContent,\r\n              theme === \"violet\" && styles.violet,\r\n              theme === \"dark\" && styles.dark\r\n            )}\r\n            onClick={closeOnClickOutside}>\r\n            <Modal\r\n              variant={theme}\r\n              closeButton={clsx(\r\n                styles.closeButton,\r\n                theme !== \"light\" && styles.closeButtonDark\r\n              )}\r\n              handleModalClose={toggleIsLogoutModalVisible}\r\n              isModalVisible={isLogoutModalVisible}>\r\n              <div\r\n                className={clsx(\r\n                  styles.modalLogoutActionCenter,\r\n                  theme === \"violet\" && styles.violet,\r\n                  theme === \"dark\" && styles.dark\r\n                )}>\r\n                <img\r\n                  className={styles.logo}\r\n                  src={smartImage}\r\n                  alt=\"smartImage logo\"\r\n                />\r\n                <p\r\n                  className={clsx(\r\n                    styles.question,\r\n                    theme === \"dark\" ? styles.questionDark : styles.question\r\n                  )}>\r\n                  Are you sure you want to log out?\r\n                </p>\r\n                <div className={styles.modalButtonsContainer}>\r\n                  <Button\r\n                    handleClick={() => {\r\n                      toggleIsLogoutModalVisible();\r\n                      handleLogout();\r\n                      navigate(\"/home\");\r\n                    }}\r\n                    type=\"button\"\r\n                    variant=\"auth\">\r\n                    Logout\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"auth\"\r\n                    handleClick={toggleIsLogoutModalVisible}\r\n                    type=\"button\">\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className={styles.projectsCont}>\r\n        <LogoSection menuType={\"Menu\"} theme={theme} />\r\n        <nav className={styles.projectsNav}>\r\n          <ul className={styles.sideLinks}>\r\n            <li>\r\n              <NavLink\r\n                to=\"/home/robots\"\r\n                className={({ isActive }) =>\r\n                  clsx(\r\n                    styles.menuBtn,\r\n                    theme === \"light\" && styles.lightMenuBtn,\r\n                    isActive &&\r\n                      (theme === \"light\"\r\n                        ? styles.lightActiveMenuBtn\r\n                        : styles.activeBtn)\r\n                  )\r\n                }>\r\n                Robots\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/home/positions\"\r\n                className={({ isActive }) =>\r\n                  clsx(\r\n                    styles.menuBtn,\r\n                    theme === \"light\" && styles.lightMenuBtn,\r\n                    (isActive || location.pathname === \"/home\") &&\r\n                      (theme === \"light\"\r\n                        ? styles.lightActiveMenuBtn\r\n                        : styles.activeBtn)\r\n                  )\r\n                }>\r\n                Positions\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink\r\n                to=\"/home/order\"\r\n                className={({ isActive }) =>\r\n                  clsx(\r\n                    styles.menuBtn,\r\n                    theme === \"light\" && styles.lightMenuBtn,\r\n                    isActive &&\r\n                      (theme === \"light\"\r\n                        ? styles.lightActiveMenuBtn\r\n                        : styles.activeBtn)\r\n                  )\r\n                }>\r\n                Order\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/home/history\"\r\n                className={({ isActive }) =>\r\n                  clsx(\r\n                    styles.menuBtn,\r\n                    theme === \"light\" && styles.lightMenuBtn,\r\n                    isActive &&\r\n                      (theme === \"light\"\r\n                        ? styles.lightActiveMenuBtn\r\n                        : styles.activeBtn)\r\n                  )\r\n                }>\r\n                History\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/home/log\"\r\n                className={({ isActive }) =>\r\n                  clsx(\r\n                    styles.menuBtn,\r\n                    theme === \"light\" && styles.lightMenuBtn,\r\n                    isActive &&\r\n                      (theme === \"light\"\r\n                        ? styles.lightActiveMenuBtn\r\n                        : styles.activeBtn)\r\n                  )\r\n                }>\r\n                Log\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/home/balance\"\r\n                className={({ isActive }) =>\r\n                  clsx(\r\n                    styles.menuBtn,\r\n                    theme === \"light\" && styles.lightMenuBtn,\r\n                    isActive &&\r\n                      (theme === \"light\"\r\n                        ? styles.lightActiveMenuBtn\r\n                        : styles.activeBtn)\r\n                  )\r\n                }>\r\n                Balance\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className={styles.info}>\r\n          <BotsStatus\r\n            theme={theme}\r\n            symbol={botSelected?.instrument}\r\n            live={botSelected?.live}\r\n            name={botSelected?.cBotName}\r\n            started={botSelected?.message}\r\n            handleClick={handleStartBot}\r\n          />\r\n          <p\r\n            className={clsx(\r\n              styles.balance,\r\n              theme === \"violet\" && styles.violetNoSelected\r\n            )}>\r\n            Account balance {balance} $\r\n          </p>\r\n        </div>\r\n        <NavLink\r\n          style={{ marginTop: \"auto\", fontSize: \"12px\" }}\r\n          to=\"/home/admin\"\r\n          className={({ isActive }) =>\r\n            clsx(\r\n              styles.menuBtn,\r\n              theme === \"light\" && styles.lightMenuBtn,\r\n              isActive &&\r\n                (theme === \"light\"\r\n                  ? styles.lightActiveMenuBtn\r\n                  : styles.activeBtn)\r\n            )\r\n          }>\r\n          Admin\r\n        </NavLink>\r\n      </div>\r\n      <button\r\n        onClick={toggleIsLogoutModalVisible}\r\n        className={styles.logoutButton}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"32\"\r\n          height=\"32\"\r\n          viewBox=\"0 0 32 32\"\r\n          fill=\"none\">\r\n          <path\r\n            d=\"M11.8667 10.0798C12.28 5.27982 14.7467 3.31982 20.1467 3.31982H20.32C26.28 3.31982 28.6667 5.70649 28.6667 11.6665V20.3598C28.6667 26.3198 26.28 28.7065 20.32 28.7065H20.1467C14.7867 28.7065 12.32 26.7732 11.88 22.0532\"\r\n            stroke={\r\n              theme === \"violet\"\r\n                ? \"white\"\r\n                : theme === \"dark\"\r\n                ? \"#bedbb0\"\r\n                : \"#2e1746\"\r\n            }\r\n            strokeWidth=\"1.5\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M2.6665 16H19.8398\"\r\n            stroke={\r\n              theme === \"violet\"\r\n                ? \"white\"\r\n                : theme === \"dark\"\r\n                ? \"#bedbb0\"\r\n                : \"#2e1746\"\r\n            }\r\n            strokeWidth=\"1.5\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M16.8667 11.5332L21.3334 15.9999L16.8667 20.4665\"\r\n            stroke={\r\n              theme === \"violet\"\r\n                ? \"white\"\r\n                : theme === \"dark\"\r\n                ? \"#bedbb0\"\r\n                : \"#2e1746\"\r\n            }\r\n            strokeWidth=\"1.5\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        </svg>\r\n        <span\r\n          className={clsx(\r\n            styles.logoutButtonSpan,\r\n            theme === \"light\"\r\n              ? styles.logoutButtonSpanLight\r\n              : styles.logoutButtonSpan\r\n          )}>\r\n          Log out\r\n        </span>\r\n      </button>\r\n    </aside>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"ParametersForm_cont__sttbm\",\"panelParameters\":\"ParametersForm_panelParameters__KdNj0\",\"parametersTitle\":\"ParametersForm_parametersTitle__qQ660\",\"parametersLabel\":\"ParametersForm_parametersLabel__hmLMb\",\"labelLight\":\"ParametersForm_labelLight__-AWsh\",\"parametersInput\":\"ParametersForm_parametersInput__qN9xn\",\"parametersSelect\":\"ParametersForm_parametersSelect__8ZUPS\",\"cBotSelect\":\"ParametersForm_cBotSelect__sGePi\",\"inputViolet\":\"ParametersForm_inputViolet__QBQfS\",\"selectViolet\":\"ParametersForm_selectViolet__Q-g-7\",\"startBtn\":\"ParametersForm_startBtn__r-B6j\"};","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\nimport clsx from \"clsx\";\r\nimport styles from \"./ParametersForm.module.css\";\r\n\r\nexport default function ParametersForm({ theme }) {\r\n  const [robots, setRobots] = useState([]);\r\n  const [isSelectedId, setIsSelectedId] = useState(null);\r\n\r\n  const [instrument, setInstrument] = useState(\"XAUUSD\");\r\n  const [volume, setVolume] = useState(0.01);\r\n  const [factor, setFactor] = useState(9);\r\n  const [cBot, setCBot] = useState(\"Choose cBot\");\r\n\r\n  // Citește și parsează JSON din localStorage\r\n  function getLocalJSON(key) {\r\n    try {\r\n      const raw = localStorage.getItem(key);\r\n      return raw ? JSON.parse(raw) : null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Sincronizare din localStorage\r\n  const syncFromLocalStorage = useCallback(() => {\r\n    const storedBots = getLocalJSON(\"cBots\") || [];\r\n    setRobots(storedBots);\r\n\r\n    const storedSelected = getLocalJSON(\"cBotSelected\");\r\n    if (storedSelected) {\r\n      setIsSelectedId(storedSelected.id || null);\r\n      setInstrument(storedSelected.instrument || \"XAUUSD\");\r\n      setVolume(storedSelected.volume ?? 0.01);\r\n      setFactor(storedSelected.factor ?? 9);\r\n      setCBot(storedSelected.cBotName || \"Choose cBot\");\r\n    } else {\r\n      setIsSelectedId(null);\r\n      setInstrument(\"XAUUSD\");\r\n      setVolume(0.01);\r\n      setFactor(9);\r\n      setCBot(\"Choose cBot\");\r\n    }\r\n  }, []);\r\n\r\n  // La montare\r\n  useEffect(() => {\r\n    syncFromLocalStorage();\r\n  }, [syncFromLocalStorage]);\r\n\r\n  // Ascultă modificările locale din alt tab / component\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === \"cBots\" || e.key === \"cBotSelected\") {\r\n        syncFromLocalStorage();\r\n      }\r\n    };\r\n    window.addEventListener(\"storage\", handleStorageChange);\r\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\r\n  }, [syncFromLocalStorage]);\r\n\r\n  // Salvare modificări\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const selectedCBot = robots.find((r) => r.id === isSelectedId);\r\n    if (!selectedCBot) return;\r\n\r\n    const modifiedCBot = {\r\n      ...selectedCBot,\r\n      volume,\r\n      instrument,\r\n      factor,\r\n    };\r\n\r\n    localStorage.setItem(\"cBotSelected\", JSON.stringify(modifiedCBot));\r\n\r\n    const index = robots.findIndex((r) => r.id === modifiedCBot.id);\r\n    if (index !== -1) {\r\n      const updatedRobots = [...robots];\r\n      updatedRobots.splice(index, 1, modifiedCBot);\r\n      localStorage.setItem(\"cBots\", JSON.stringify(updatedRobots));\r\n      setRobots(updatedRobots);\r\n      toast.success(\"Parameters saved successfully!\");\r\n    }\r\n  };\r\n\r\n  // Când selectezi alt cBot din dropdown\r\n  const handleCBotChange = (e) => {\r\n    const selectedName = e.target.value;\r\n    const selectedRobot = robots.find((r) => r.cBotName === selectedName);\r\n    if (!selectedRobot) return;\r\n\r\n    setIsSelectedId(selectedRobot.id);\r\n    setCBot(selectedRobot.cBotName);\r\n    setInstrument(selectedRobot.instrument || \"XAUUSD\");\r\n    setVolume(selectedRobot.volume ?? 0.01);\r\n    setFactor(selectedRobot.factor ?? 9);\r\n\r\n    localStorage.setItem(\"cBotSelected\", JSON.stringify(selectedRobot));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.cont}>\r\n      <form className={styles.panelParameters} onSubmit={handleSubmit}>\r\n        <h2 className={styles.parametersTitle}>Parameters</h2>\r\n\r\n        <label\r\n          className={clsx(\r\n            styles.parametersLabel,\r\n            theme === \"light\" && styles.labelLight\r\n          )}\r\n          htmlFor=\"instrument\">\r\n          Instrument\r\n        </label>\r\n        <select\r\n          className={clsx(\r\n            styles.parametersSelect,\r\n            styles.cBotSelect,\r\n            theme === \"violet\" && styles.selectViolet\r\n          )}\r\n          id=\"instrument\"\r\n          value={instrument}\r\n          onChange={(e) => setInstrument(e.target.value)}>\r\n          <option>XAUUSD</option>\r\n          <option>US30</option>\r\n          <option>BTCUSD</option>\r\n          <option>EURUSD</option>\r\n        </select>\r\n\r\n        <label\r\n          className={clsx(\r\n            styles.parametersLabel,\r\n            theme === \"light\" && styles.labelLight\r\n          )}\r\n          htmlFor=\"volume\">\r\n          Minimum Volume\r\n        </label>\r\n        <input\r\n          className={clsx(\r\n            styles.parametersInput,\r\n            theme === \"violet\" && styles.inputViolet\r\n          )}\r\n          type=\"number\"\r\n          id=\"volume\"\r\n          value={volume}\r\n          step=\"0.01\"\r\n          min=\"0.01\"\r\n          onChange={(e) => setVolume(parseFloat(e.target.value))}\r\n        />\r\n\r\n        <label\r\n          className={clsx(\r\n            styles.parametersLabel,\r\n            theme === \"light\" && styles.labelLight\r\n          )}\r\n          htmlFor=\"factor\">\r\n          Boost Factor\r\n        </label>\r\n        <input\r\n          className={clsx(\r\n            styles.parametersInput,\r\n            theme === \"violet\" && styles.inputViolet\r\n          )}\r\n          type=\"number\"\r\n          id=\"factor\"\r\n          value={factor}\r\n          min=\"1\"\r\n          max=\"50\"\r\n          onChange={(e) => setFactor(parseInt(e.target.value))}\r\n        />\r\n\r\n        <label\r\n          className={clsx(\r\n            styles.parametersLabel,\r\n            theme === \"light\" && styles.labelLight\r\n          )}\r\n          htmlFor=\"cBot\">\r\n          cBot\r\n        </label>\r\n        <select\r\n          className={clsx(\r\n            styles.parametersSelect,\r\n            styles.cBotSelect,\r\n            theme === \"violet\" && styles.selectViolet\r\n          )}\r\n          id=\"cBot\"\r\n          value={cBot}\r\n          onChange={handleCBotChange}>\r\n          {robots.map((r) => (\r\n            <option key={r.id}>{r.cBotName}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <button type=\"submit\" className={styles.startBtn}>\r\n          Apply\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nParametersForm.propTypes = {\r\n  theme: PropTypes.string.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"SidebarRight_cont__3736g\",\"paramsCont\":\"SidebarRight_paramsCont__heRlq\",\"asideLight\":\"SidebarRight_asideLight__sQF-+\",\"asideViolet\":\"SidebarRight_asideViolet__2B1er\",\"asideDark\":\"SidebarRight_asideDark__o2x6w\",\"chatCont\":\"SidebarRight_chatCont__--Npg\",\"parametersTitle\":\"SidebarRight_parametersTitle__Le+UO\",\"chatFab\":\"SidebarRight_chatFab__oAiLZ\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport LogoSection from \"../LogoSection/LogoSection\";\r\nimport ParametersForm from \"../ParametersForm/ParametersForm\";\r\n\r\nimport styles from \"./SidebarRight.module.css\";\r\n\r\nexport default function SidebarRight({ sideBarRightRef, theme, params }) {\r\n  return (\r\n    <aside\r\n      ref={sideBarRightRef}\r\n      className={clsx(\r\n        styles.cont,\r\n        theme === \"dark\"\r\n          ? styles.asideDark\r\n          : theme === \"violet\"\r\n          ? styles.asideViolet\r\n          : styles.asideLight\r\n      )}>\r\n      <div className={styles.paramsCont}>\r\n        <LogoSection menuType={\"Settings\"} theme={theme} />\r\n        <ParametersForm params={params} theme={theme} />\r\n        <div className={styles.chatCont}>\r\n          <h2 className={styles.parametersTitle}>Chat</h2>\r\n          <NavLink to=\"/home/chat\" className={styles.chatFab}>\r\n            <svg width=\"26\" height=\"26\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"#151b22\"\r\n                d=\"M12 2C6.48 2 2 5.58 2 10c0 1.78.73 3.43 1.98 4.82L2 22l6.63-2.54C9.76 19.82 10.87 20 12 20c5.52 0 10-3.58 10-8s-4.48-8-10-8z\"></path>\r\n            </svg>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nSidebarRight.propTypes = {\r\n  sideBarRightRef: PropTypes.object,\r\n  theme: PropTypes.string,\r\n  params: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"HomePage_section__vk0y6\",\"sidebarWrapper\":\"HomePage_sidebarWrapper__F4TzE\",\"sidebarWrapperRight\":\"HomePage_sidebarWrapperRight__qted4\",\"bgDark\":\"HomePage_bgDark__6jq02\",\"sidebarOpen\":\"HomePage_sidebarOpen__28+uK\",\"sidebarClose\":\"HomePage_sidebarClose__CfECo\",\"sidebarRightClose\":\"HomePage_sidebarRightClose__LP8Ow\"};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport SharedLayout from \"../../components/SharedLayout/SharedLayout\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport SidebarRight from \"../../components/SidebarRight/SidebarRight\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport styles from \"./HomePage.module.css\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport clsx from \"clsx\";\r\n\r\nconst breakpoints = {\r\n  mobile: \"(max-width: 767px)\",\r\n  tablet: \"(min-width:768px)\",\r\n  desktop: \"(min-width:1115px)\",\r\n};\r\n\r\nexport default function HomePage() {\r\n  const [isSidebarVisible, toggleIsSidebarVisible] = useToggle(false); // Default to false for mobile\r\n  const [isSidebarRightVisible, toggleIsSidebarRightVisible] = useToggle(false); // Default to false for mobile\r\n\r\n  const sideBarRef = useRef();\r\n  const sideBarRightRef = useRef();\r\n\r\n  const isDesktop = useMediaQuery({ query: breakpoints.desktop });\r\n\r\n  const { user } = useAuth();\r\n  const theme = user?.theme || \"light\";\r\n\r\n  const [params, setParams] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const savedParams = localStorage.getItem(\"parameters\");\r\n    if (savedParams) {\r\n      setParams(JSON.parse(savedParams));\r\n    }\r\n  }, []);\r\n\r\n  const language = localStorage.getItem(\"lang\") || \"english\";\r\n\r\n  useEffect(() => {\r\n    const handleEscapeKey = (event) => {\r\n      if (event.key === \"Escape\" && isSidebarVisible) toggleIsSidebarVisible();\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n      if (\r\n        sideBarRef.current &&\r\n        !sideBarRef.current.contains(event.target) &&\r\n        isSidebarVisible\r\n      ) {\r\n        toggleIsSidebarVisible();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleEscapeKey);\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEscapeKey);\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [isSidebarVisible, toggleIsSidebarVisible]);\r\n\r\n  useEffect(() => {\r\n    const handleEscapeKey = (event) => {\r\n      if (event.key === \"Escape\" && isSidebarRightVisible)\r\n        toggleIsSidebarRightVisible();\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n      if (\r\n        sideBarRightRef.current &&\r\n        !sideBarRightRef.current.contains(event.target) &&\r\n        isSidebarRightVisible\r\n      ) {\r\n        toggleIsSidebarRightVisible();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleEscapeKey);\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEscapeKey);\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [isSidebarRightVisible, toggleIsSidebarRightVisible]);\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      {!isDesktop && (\r\n        <div\r\n          className={clsx(\r\n            styles.sidebarWrapper,\r\n            isSidebarVisible ? styles.sidebarOpen : styles.sidebarClose,\r\n            theme === \"dark\" && styles.bgDark\r\n          )}>\r\n          <Sidebar sideBarRef={sideBarRef} theme={theme} />\r\n        </div>\r\n      )}\r\n      {isDesktop && <Sidebar theme={theme} />}\r\n\r\n      <SharedLayout\r\n        handleClick={toggleIsSidebarVisible}\r\n        handleRightClick={toggleIsSidebarRightVisible}\r\n        user={user}\r\n        theme={theme}\r\n        lang={language}\r\n      />\r\n\r\n      {!isDesktop && (\r\n        <div\r\n          className={clsx(\r\n            styles.sidebarWrapperRight,\r\n            isSidebarRightVisible\r\n              ? styles.sidebarOpen\r\n              : styles.sidebarRightClose,\r\n            theme === \"dark\" && styles.bgDark\r\n          )}>\r\n          <SidebarRight\r\n            sideBarRightRef={sideBarRightRef}\r\n            theme={theme}\r\n            params={params}\r\n          />\r\n        </div>\r\n      )}\r\n      {isDesktop && <SidebarRight theme={theme} params={params} />}\r\n    </section>\r\n  );\r\n}\r\n","import HomePage from './HomePage.jsx'\r\n\r\nexport default HomePage","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue) {\r\n    const [isOpen, setIsOpen] = useState(initialValue);\r\n\r\n    function toggle() {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return [isOpen, toggle];\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DQKMR\",\"violet\":\"Button_violet__AJ44T\"};","import Button from \"./Button\";\r\n\r\nexport default Button;\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nexport default function Button({\r\n  type,\r\n  children,\r\n  variant = \"\",\r\n  theme = \"light\",\r\n  handleClick,\r\n  disabled,\r\n  className,\r\n}) {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      onClick={handleClick}\r\n      type={type}\r\n      className={clsx(\r\n        styles.button,\r\n        variant === \"auth\"\r\n          ? styles.button\r\n          : variant === \"send\"\r\n          ? theme === \"violet\"\r\n            ? styles.violet\r\n            : styles.button\r\n          : null, // If no match, fallback to no additional styles\r\n        className // Allow additional custom classes\r\n      )}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  className: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalFooter\":\"ModalFooter_modalFooter__pNMf3\",\"isOpen\":\"ModalFooter_isOpen__BcuHK\",\"modalBg\":\"ModalFooter_modalBg__TQtJG\",\"modalContent\":\"ModalFooter_modalContent__+obno\",\"footerCards\":\"ModalFooter_footerCards__hRuzy\",\"footerTeamCard\":\"ModalFooter_footerTeamCard__chQOd\",\"Radu\":\"ModalFooter_Radu__3LaFv\",\"Adrian\":\"ModalFooter_Adrian__-m8Qs\",\"Sara\":\"ModalFooter_Sara__dc-+L\",\"catalin\":\"ModalFooter_catalin__2jVhb\",\"teamMemberImage\":\"ModalFooter_teamMemberImage__r02qM\",\"footerMemberInfo\":\"ModalFooter_footerMemberInfo__tqwiC\",\"footerTeamNameLink\":\"ModalFooter_footerTeamNameLink__lItSr\",\"footerTeamName\":\"ModalFooter_footerTeamName__YPYIC\",\"socialLinks\":\"ModalFooter_socialLinks__BXRNr\",\"footerGithubIcon\":\"ModalFooter_footerGithubIcon__L3Ff-\",\"footerLinkedinIcon\":\"ModalFooter_footerLinkedinIcon__6-6Ci\",\"footerPhoneIcon\":\"ModalFooter_footerPhoneIcon__L59Iy\"};","// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"FooterLogo_logo__D6iUK\",\"formLogo\":\"FooterLogo_formLogo__Jftx3\"};","import { Link } from \"react-router-dom\";\r\nimport styles from \"./FooterLogo.module.css\";\r\nimport logoImage from \"../../../images/smart1Edited.jpg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Logo = ({ variant = \"default\" }) => {\r\n  return (\r\n    <Link\r\n      className={`${styles.logo} ${styles[variant] || styles.default}`}\r\n      to=\"/home\">\r\n      <img src={logoImage} alt=\"Logo\" />\r\n      <span>RobiForexGabyTrade</span>\r\n    </Link>\r\n  );\r\n};\r\n\r\nLogo.propTypes = {\r\n  variant: PropTypes.string,\r\n};\r\n\r\nexport default Logo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formButton\":\"FormButton_formButton__5CfxQ\",\"multiColorButtton\":\"FormButton_multiColorButtton__kpiHq\",\"whiteButtton\":\"FormButton_whiteButtton__J5hgs\"};","import styles from \"./FormButton.module.css\";\r\n\r\nconst FormButton = ({\r\n  type,\r\n  text,\r\n  handlerFunction,\r\n  variant,\r\n  isDisabled = false,\r\n}) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={handlerFunction}\r\n      className={`${styles.formButton} ${styles[variant]}`}\r\n      disabled={isDisabled}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styles from \"./ModalFooter.module.css\";\r\n// import { useMediaQuery } from \"react-responsive\";\r\nimport ModalLogo from \"../commonComponents/FooterLogo/FooterLogo\";\r\nimport { FaGithub, FaLinkedin, FaPhoneAlt, FaFacebook } from \"react-icons/fa\";\r\nimport FormButton from \"../commonComponents/FormButton/FormButton\";\r\nimport \"animate.css\";\r\n\r\n// Corectarea importului imaginii\r\nimport Radu from \"../../images/teamMembersPhoto/Radu.webp\";\r\nimport Roby from \"../../images/teamMembersPhoto/Roby.jpg\";\r\n\r\nconst ModalFooter = ({ closeModal }) => {\r\n  const modalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"hidden\";\r\n\r\n    const addCloseEvent = (event) => {\r\n      if (event.key === \"Escape\") closeModal();\r\n    };\r\n    document.addEventListener(\"keydown\", addCloseEvent);\r\n\r\n    return () => {\r\n      document.body.style.overflow = \"auto\";\r\n      document.removeEventListener(\"keydown\", addCloseEvent);\r\n    };\r\n  });\r\n\r\n  const closeOnClickOutside = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  // const screenCondition = useMediaQuery({ query: \"(min-width: 768px)\" });\r\n\r\n  const animation = \"animate__animated animate__fadeInDown animate__slow\";\r\n\r\n  return (\r\n    <div\r\n      className={styles.modalFooter}\r\n      onClick={closeOnClickOutside}\r\n      ref={modalRef}>\r\n      <div className={styles.modalBg}>\r\n        <div className={styles.modalContent}>\r\n          {/* {screenCondition && <ModalLogo variant={\"formLogo\"} />} */}\r\n          <ModalLogo variant={\"formLogo\"} />\r\n          <h2>RobiTrader Team:</h2>\r\n\r\n          <div className={styles.footerCards}>\r\n            {/* Card pentru Radu */}\r\n            <div\r\n              className={`${styles.footerTeamCard} ${animation} ${styles.Radu}`}>\r\n              <a\r\n                href=\"https://radubogdannaramzoiu.link\"\r\n                aria-label=\"My e visit-card\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\">\r\n                <img\r\n                  src={Radu} // Folosește variabila corectă pentru imagine\r\n                  alt=\"Radu\"\r\n                  className={styles.teamMemberImage}\r\n                />\r\n              </a>\r\n\r\n              <span className={styles.footerTeamName}>\r\n                Naramzoiu Radu Bogdan\r\n              </span>\r\n              <em className={styles.footerTeamFunction}>Project Manager</em>\r\n              <div className={styles.socialLinks}>\r\n                <a\r\n                  href=\"https://github.com/turbomatrixxxl\"\r\n                  className={styles.footerGithubIcon}\r\n                  aria-label=\"GitHub profile\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\">\r\n                  <FaGithub />\r\n                </a>\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/radu-bogdan-naramzoiu-fullstack-developer/\"\r\n                  className={styles.footerLinkedinIcon}\r\n                  aria-label=\"LinkedIn profile\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\">\r\n                  <FaLinkedin />\r\n                </a>\r\n                <a\r\n                  href=\"tel:+40771392871\"\r\n                  className={styles.footerPhoneIcon}\r\n                  aria-label=\"Phone\">\r\n                  <FaPhoneAlt />\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Card pentru Gaby */}\r\n            <div\r\n              className={`${styles.footerTeamCard} ${animation} ${styles.Adrian}`}>\r\n              <img\r\n                src={Roby} // Folosește variabila corectă pentru imagine\r\n                alt=\"Anton Ovidiu-Gabriel\"\r\n                className={styles.teamMemberImage}\r\n              />\r\n              <span className={styles.footerTeamName}>\r\n                Anton Ovidiu-Gabriel\r\n              </span>\r\n              <em className={styles.footerTeamFunction}>Team Leader</em>\r\n              <div className={styles.socialLinks}>\r\n                <a\r\n                  href=\"https://github.com/ovidiu12345678\"\r\n                  className={styles.footerGithubIcon}\r\n                  aria-label=\"GitHub profile\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\">\r\n                  <FaGithub />\r\n                </a>\r\n                <a\r\n                  href=\"https://www.facebook.com/anton.gabriel.7739\"\r\n                  className={styles.footerLinkedinIcon}\r\n                  aria-label=\"LinkedIn profile\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\">\r\n                  <FaFacebook />\r\n                </a>\r\n                <a\r\n                  href=\"tel:+40759337248\"\r\n                  className={styles.footerPhoneIcon}\r\n                  aria-label=\"Phone\">\r\n                  <FaPhoneAlt />\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Adaugă alte carduri pentru membrii echipei dacă este necesar */}\r\n          </div>\r\n\r\n          <FormButton\r\n            type={\"button\"}\r\n            text={\"Thank You\"}\r\n            variant={\"whiteButtton\"}\r\n            handlerFunction={() => closeModal()}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalFooter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"Footer_footer__VtinA\",\"sharedFooter\":\"Footer_sharedFooter__cloVg\",\"dark\":\"Footer_dark__KsUbB\",\"light\":\"Footer_light__8x8OV\",\"lightText\":\"Footer_lightText__Y15mN\",\"footerText\":\"Footer_footerText__6HCKi\"};","import { useState } from \"react\";\r\nimport Modal from \"../ModalFooter/ModalFooter\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nimport styles from \"./Footer.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Footer = ({ style, sharedFooter }) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const {theme} =useAuth() ; \r\n\r\n  const handleTextClick = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <footer\r\n      style={style}\r\n      className={clsx(\r\n        styles.footer,\r\n        sharedFooter === true ? styles.sharedFooter : null,\r\n        theme === \"light\" || theme === \"violet\" ? styles.light : null\r\n      )}>\r\n      <div\r\n        onClick={handleTextClick}\r\n        className={clsx(\r\n          styles.footerText,\r\n          theme === \"light\" || theme === \"violet\" ? styles.lightText : null\r\n        )}>\r\n        <p>℗ & © Marketing_App</p>\r\n        <p>Powered by Creative Infinity Team</p>\r\n      </div>\r\n     \r\n      {modalOpen && <Modal closeModal={() => setModalOpen(false)} />}\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"names":["balance","Chart","theme","localStorage","getItem","equity","data","name","value","backgroundColor","borderWidth","hoverOffset","sortedData","sort","a","b","Number","_jsxs","className","styles","chartContainer","children","_jsx","ResponsiveContainer","width","height","PieChart","fill","Tooltip","cursor","content","_ref","active","payload","length","clsx","tooltipContainer","violet","tooltipNameContainer","tooltipSumContainer","style","background","borderRadius","toFixed","Pie","startOffset","chart","dataKey","outerRadius","innerRadius","map","entry","index","Cell","chartCont","chartBalance","light","ThemeSelector","dispatch","useDispatch","themeA","setTheme","useState","isOpen","setIsOpen","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","onClick","prev","HiChevronUp","HiChevronDown","option","handleSelect","selectedTheme","updateTheme","charAt","toUpperCase","slice","LanguageSelector","lang","langA","setLang","selectedLang","setItem","Input","type","placeholder","required","variant","handleChange","paddingLeft","autoComplete","handleBlur","isComment","onChange","onBlur","UpdateUser","onClose","user","formRef","modalRef","fileInputRef","userNewName","setUserNewName","username","userNewMail","setUserNewMail","email","userNewPassword","setUserNewPassword","selectedFile","setSelectedFile","setType","eyeVisible","toggleEyeVisible","useToggle","closedEyeVisible","toggleClosedEyeVisible","handleEscapeKey","e","key","imageUrl","URL","createObjectURL","avatarURL","startsWith","stopPropagation","modalContainerNeed","contDark","contLight","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","text","textDark","imgCont","imgContViolet","imgContLight","userImg","src","alt","imgPlusCont","accept","display","file","files","imgPlusBtn","iconPlusViolet","iconPlus","click","viewBox","onSubmit","preventDefault","updateUserInfo","password","formData","FormData","append","updateUserAvatar","then","response","toast","success","error","catch","setTimeout","refreshUser","textarea","inputWrapper","VscEye","size","eyeIcon","eyeIconDark","VscEyeClosed","Button","btn","breakpoints","handleClick","handleRightClick","useAuth","isUpdateUserModalVisible","setIsUpdateUserModalVisible","isMobile","useMediaQuery","query","isTablet","isDesktop","hover","setHover","_Fragment","handleCloseUpdateModal","onMouseEnter","onMouseLeave","smartImage","fontSize","fontWeight","handleOpenUpdateModal","FaCog","color","Header","Outlet","Footer","sharedFooter","isModalVisible","handleModalClose","dialogRef","contRef","modalContentClassName","closeButton","leftImage","rightImage","id","HiX","menuType","navigate","useNavigate","live","cBotSelected","JSON","parse","liveA","setLive","selectedlive","modifiedCBotSelected","stringify","BotStatusCard","symbol","started","LiveSelector","BotsStatus","sideBarRef","isLogoutModalVisible","toggleIsLogoutModalVisible","location","useLocation","botSelected","botStarted","setBotStarted","message","robots","body","classList","add","noScroll","remove","cont","asideDark","asideViolet","asideLight","modalOverlay","modalContent","dark","currentTarget","Modal","closeButtonDark","modalLogoutActionCenter","logo","question","questionDark","modalButtonsContainer","logOut","reset","projectsCont","LogoSection","projectsNav","sideLinks","NavLink","to","_ref2","isActive","menuBtn","lightMenuBtn","lightActiveMenuBtn","activeBtn","_ref3","pathname","_ref4","_ref5","_ref6","_ref7","info","instrument","cBotName","newBotStarted","time","getCurrentDateTime","updatedRobots","bot","violetNoSelected","marginTop","_ref8","logoutButton","logoutButtonSpan","logoutButtonSpanLight","ParametersForm","setRobots","isSelectedId","setIsSelectedId","setInstrument","volume","setVolume","factor","setFactor","cBot","setCBot","getLocalJSON","raw","syncFromLocalStorage","useCallback","storedBots","storedSelected","_storedSelected$volum","_storedSelected$facto","handleStorageChange","window","selectedCBot","find","r","modifiedCBot","findIndex","splice","htmlFor","step","min","parseFloat","max","parseInt","_selectedRobot$volume","_selectedRobot$factor","selectedName","selectedRobot","SidebarRight","sideBarRightRef","params","isSidebarVisible","toggleIsSidebarVisible","isSidebarRightVisible","toggleIsSidebarRightVisible","setParams","savedParams","language","Sidebar","SharedLayout","initialValue","disabled","Link","logoImage","handlerFunction","isDisabled","formButton","closeModal","overflow","addCloseEvent","animation","modalFooter","modalBg","ModalLogo","footerCards","footerTeamCard","Radu","href","rel","teamMemberImage","footerTeamName","footerTeamFunction","socialLinks","footerGithubIcon","FaGithub","footerLinkedinIcon","FaLinkedin","footerPhoneIcon","FaPhoneAlt","Adrian","Roby","FaFacebook","FormButton","modalOpen","setModalOpen","handleTextClick"],"sourceRoot":""}